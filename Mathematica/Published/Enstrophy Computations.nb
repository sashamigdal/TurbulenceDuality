(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    163661,       3699]
NotebookOptionsPosition[    154864,       3549]
NotebookOutlinePosition[    155392,       3568]
CellTagsIndexPosition[    155349,       3565]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  TemplateBox[<|"boxes" -> FormBox[
      RowBox[{
        SubscriptBox["\[Sigma]", 
         StyleBox["m", "TI"]], 
        SubscriptBox["\[Sigma]", 
         StyleBox["n", "TI"]], 
        SuperscriptBox[
         StyleBox["e", "TI"], 
         RowBox[{"-", "\[ScriptDotlessI]\[Omega]", 
           RowBox[{"(", 
             RowBox[{
               SubscriptBox["\[Sigma]", 
                StyleBox["n", "TI"]], "+", 
               SubscriptBox["\[Sigma]", 
                StyleBox["m", "TI"]]}], ")"}]}]], "exp", 
        RowBox[{"\[ScriptDotlessI]", "exp", 
          SubscriptBox["\[ScriptDotlessI]\[Beta]\[Sigma]", 
           StyleBox["n", "TI"]], 
          SubscriptBox[
           StyleBox["A", "TI"], 
           RowBox[{
             StyleBox["n", "TI"], ",", 
             StyleBox["m", "TI"]}]], "-", "\[ScriptDotlessI]", "exp", 
          SubscriptBox["\[ScriptDotlessI]\[Beta]\[Sigma]", 
           StyleBox["m", "TI"]], 
          SubscriptBox[
           StyleBox["A", "TI"], 
           RowBox[{
             StyleBox["m", "TI"], ",", 
             StyleBox["n", "TI"], "+", 
             StyleBox["N", "TI"]}]]}]}], TraditionalForm], "errors" -> {}, 
    "input" -> 
    "\\sigma_m \\sigma_n   e^{ -\\imath \\omega  (\\sigma_n + \
\\sigma_m)}\\exp{\\imath  \\exp{ \\imath \\beta \\sigma_n} A_{n, m} -\\imath  \
\\exp{ \\imath \\beta \\sigma_m} A_{m, n+N} }", "state" -> "Boxes"|>,
   "TeXAssistantTemplate"]}]], "Input",
 Evaluatable->False,
 CellChangeTimes->{3.9014567977662992`*^9, 3.9014568469143057`*^9},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->"In[15]:=",ExpressionUUID->"9c6235a1-0763-4bbf-b1ca-7b853c181ba5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FF", "[", "A_", "]"}], " ", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "2"}], 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"\[Sigma]", " ", 
        RowBox[{"E", "^", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", " ", "I"}], " ", "\[Omega]", " ", "\[Sigma]"}], "  ",
            "+", " ", 
           RowBox[{"I", " ", 
            RowBox[{"E", "^", 
             RowBox[{"(", 
              RowBox[{"I", " ", "\[Beta]", " ", "\[Sigma]", " ", "A"}], 
              ")"}]}]}]}], ")"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}]}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Beta]", ",", "\[Omega]", ",", " ", "A"}], "}"}], " ", 
     "\[Epsilon]", " ", "Reals"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.901456872078577*^9, 3.9014569127392187`*^9}, {
  3.90145697121799*^9, 3.901457115204397*^9}},
 CellLabel->"In[16]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"Cos", "[", 
       RowBox[{"A", " ", "\[Beta]"}], "]"}], "]"}]}], "+", 
    RowBox[{"Sin", "[", 
     RowBox[{"Cos", "[", 
      RowBox[{"A", " ", "\[Beta]"}], "]"}], "]"}]}], ")"}], " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"\[Omega]", "-", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"A", " ", "\[Beta]"}], "]"}]}]}], "]"}]}]], "Output",
 CellChangeTimes->{3.901457117833123*^9, 3.901461707470274*^9, 
  3.9014619605289907`*^9},
 CellLabel->"Out[16]="]
}, Open  ]],

Cell[BoxData[
 TemplateBox[<|"boxes" -> FormBox[
     RowBox[{
       FractionBox[
        RowBox[{
          SuperscriptBox["cot", "2"], "(", 
          FractionBox["\[Beta]", "2"], ")"}], "32"], 
       SubsuperscriptBox["\[Integral]", 
        RowBox[{"-", "\[Pi]"}], "\[Pi]"], 
       FractionBox[
        RowBox[{
          StyleBox["d", "TI"], "\[Omega]"}], 
        RowBox[{"2", "\[Pi]"}]], 
       SuperscriptBox[
        StyleBox["e", "TI"], 
        RowBox[{"\[ScriptDotlessI]\[Omega]", 
          StyleBox["q", "TI"], 
          StyleBox["r", "TI"]}]], 
       SuperscriptBox["cos", 
        RowBox[{
          StyleBox["N", "TI"], "-", "2"}]], "\[Omega]", 
       RowBox[{"(", 
         RowBox[{"1", "-", "cos", "2", "\[Omega]"}], ")"}]}], 
     TraditionalForm], "errors" -> {}, "input" -> 
   "\\frac{\\cot ^2\\left(\\frac{\\beta }{2}\\right)}{32} \\int_{-\\pi}^\\pi \
\\frac{d \\omega}{2 \\pi} e^{\\imath \\omega q r} \\cos^{N-2} \\omega (1 - \
\\cos 2 \\omega)", "state" -> "Boxes"|>,
  "TeXAssistantTemplate"]], "Input",
 Evaluatable->False,
 CellChangeTimes->{3.9014618538253727`*^9},
 EmphasizeSyntaxErrors->True,
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->"In[17]:=",ExpressionUUID->"95418890-3651-4933-8721-11a26eccaceb"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "this", " ", "substitution", " ", "compotes", " ", "the", " ", "Fourier", 
   " ", "integral", " ", "over", " ", "unit", " ", "circle"}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.9014679762733297`*^9, 3.901468009514494*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"subInt", "[", 
   RowBox[{"r_", ",", " ", "l_"}], "]"}], " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"E", "^", 
      RowBox[{"(", "X_", ")"}]}], " ", "F_"}], ":>", " ", 
    RowBox[{"(", 
     RowBox[{"F", "/.", 
      RowBox[{
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"X", ",", "\[Omega]"}], "]"}], "==", 
          RowBox[{"I", " ", "r"}]}], ",", "l"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "}"}]}]], "Input",
 CellLabel->"In[263]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", "X_"], " ", "F_"}], "\[RuleDelayed]", 
   RowBox[{"(", 
    RowBox[{"F", "/.", "\[VeryThinSpace]", 
     RowBox[{
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          SubscriptBox["\[PartialD]", "\[Omega]"], "X"}], "\[Equal]", 
         RowBox[{"\[ImaginaryI]", " ", "r"}]}], ",", "l"}], "]"}], 
      "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ")"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.901459329589459*^9, 3.901461707534289*^9, 
  3.9014619605524406`*^9, 3.902996312960883*^9},
 CellLabel->"Out[263]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "This", " ", "is", " ", "a", " ", "binomial", " ", "expansion", " ", "of", 
    " ", "the", " ", "power", " ", "of", " ", "the", " ", "cosine"}], ",", 
   " ", 
   RowBox[{
   "to", " ", "use", " ", "above", " ", "substitution", " ", "rule"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.901468023646162*^9, 3.901468073815481*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"II", " ", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"1", "/", "2"}], 
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"TrigToExp", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Omega]", "]"}], "^", 
         RowBox[{"(", 
          RowBox[{"N", "-", "2"}], ")"}]}], 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Omega]"}], "]"}]}], ")"}]}], "]"}], "/.", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Omega]"}]], "+", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "\[Omega]"}]]}], ")"}], 
        RowBox[{
         RowBox[{"-", "2"}], "+", "N"}]], " ", "->", " ", 
       RowBox[{
        RowBox[{"Binomial", "[", 
         RowBox[{
          RowBox[{"N", "-", "2"}], ",", "l"}], "]"}], " ", 
        RowBox[{"E", "^", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"I", " ", "\[Omega]", " ", 
            RowBox[{"(", 
             RowBox[{"N", "-", "2", "-", "l"}], ")"}]}], " ", "-", " ", 
           RowBox[{"I", " ", "\[Omega]", " ", "l"}]}], ")"}]}]}]}]}], " ", 
     "]"}]}], "//", "Expand"}]}]], "Input",
 CellChangeTimes->{{3.901459389220688*^9, 3.901459411039323*^9}, {
  3.901459595166417*^9, 3.901459822166964*^9}, {3.902996205667197*^9, 
  3.902996207289124*^9}},
 CellLabel->"In[264]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["2", 
     RowBox[{"-", "N"}]]}], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", 
     RowBox[{"(", 
      RowBox[{"4", "+", 
       RowBox[{"2", " ", "l"}], "-", "N"}], ")"}], " ", "\[Omega]"}]], " ", 
   RowBox[{"Binomial", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], "+", "N"}], ",", "l"}], "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["2", 
    RowBox[{"1", "-", "N"}]], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Omega]"}], "-", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{"4", "+", 
        RowBox[{"2", " ", "l"}], "-", "N"}], ")"}], " ", "\[Omega]"}]}]], " ", 
   RowBox[{"Binomial", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], "+", "N"}], ",", "l"}], "]"}]}], "-", 
  RowBox[{
   SuperscriptBox["2", 
    RowBox[{"-", "N"}]], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"4", " ", "\[ImaginaryI]", " ", "\[Omega]"}], "-", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{"4", "+", 
        RowBox[{"2", " ", "l"}], "-", "N"}], ")"}], " ", "\[Omega]"}]}]], " ", 
   RowBox[{"Binomial", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], "+", "N"}], ",", "l"}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.901459637122559*^9, {3.901459788552339*^9, 3.901459822789963*^9}, 
   3.9014617076279507`*^9, 3.9014619606077223`*^9, {3.902996288917233*^9, 
   3.902996315895269*^9}},
 CellLabel->"Out[264]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"JJ", " ", "=", " ", 
  RowBox[{"II", "/.", 
   RowBox[{"subInt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "q"}], " ", "r"}], ",", " ", "l"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9014598319225187`*^9, 3.901459870413815*^9}},
 CellLabel->"In[265]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["2", 
     RowBox[{"-", "N"}]]}], " ", 
   RowBox[{"Binomial", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], "+", "N"}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "4"}], "+", "N", "+", 
        RowBox[{"q", " ", "r"}]}], ")"}]}]}], "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["2", 
    RowBox[{"1", "-", "N"}]], " ", 
   RowBox[{"Binomial", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], "+", "N"}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "N", "+", 
        RowBox[{"q", " ", "r"}]}], ")"}]}]}], "]"}]}], "-", 
  RowBox[{
   SuperscriptBox["2", 
    RowBox[{"-", "N"}]], " ", 
   RowBox[{"Binomial", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], "+", "N"}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"N", "+", 
        RowBox[{"q", " ", "r"}]}], ")"}]}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.901459880392528*^9, 3.9014617076533012`*^9, 3.90146196066228*^9, {
   3.9029962942354116`*^9, 3.902996319214086*^9}},
 CellLabel->"Out[265]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "this", " ", "is", " ", "to", " ", "help", " ", "silly", " ", "Mathematica",
    " ", "simplify", " ", "sum", " ", "of", " ", "binomials"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.901468095912435*^9, 3.9014681244083767`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KK", " ", "=", " ", 
  RowBox[{
   RowBox[{"Binomial", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], "+", "N"}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "N", "+", 
        RowBox[{"q", " ", "r"}]}], ")"}]}]}], "]"}], " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"JJ", "/", 
     RowBox[{"Binomial", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], "+", "N"}], ",", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "N", "+", 
          RowBox[{"q", " ", "r"}]}], ")"}]}]}], "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.901459932471857*^9, 3.9014599597326803`*^9}},
 CellLabel->"In[266]:="],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["2", 
    RowBox[{"2", "-", "N"}]], " ", 
   RowBox[{"(", 
    RowBox[{"N", "-", 
     RowBox[{
      SuperscriptBox["q", "2"], " ", 
      SuperscriptBox["r", "2"]}]}], ")"}], " ", 
   RowBox[{"Binomial", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], "+", "N"}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "N", "+", 
        RowBox[{"q", " ", "r"}]}], ")"}]}]}], "]"}]}], 
  RowBox[{
   SuperscriptBox["N", "2"], "-", 
   RowBox[{
    SuperscriptBox["q", "2"], " ", 
    SuperscriptBox["r", "2"]}]}]]], "Output",
 CellChangeTimes->{3.9014599647811728`*^9, 3.901461707896702*^9, 
  3.9014619606862*^9, 3.902996329650536*^9},
 CellLabel->"Out[266]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "this", " ", "time", " ", "it", " ", "simplifies", " ", "without", " ", 
   "human", " ", "intervention"}], "*)"}]], "Input",
 CellChangeTimes->{{3.9014681473521442`*^9, 3.90146816702437*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"F2", "[", 
   RowBox[{"\[Beta]_", ",", "q_", ",", " ", "r_", ",", " ", "N_"}], "]"}], 
  "  ", "=", 
  RowBox[{
   RowBox[{"N", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"N", "-", "1"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"2", " ", "*", " ", "16"}], ")"}]}], 
    FractionBox[
     RowBox[{
      SuperscriptBox["2", 
       RowBox[{"2", "-", "N"}]], " ", 
      RowBox[{"(", 
       RowBox[{"N", "-", 
        RowBox[{
         SuperscriptBox["q", "2"], " ", 
         SuperscriptBox["r", "2"]}]}], ")"}], " ", 
      RowBox[{"Binomial", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], "+", "N"}], ",", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "N", "+", 
           RowBox[{"q", " ", "r"}]}], ")"}]}]}], "]"}]}], 
     RowBox[{
      SuperscriptBox["N", "2"], "-", 
      RowBox[{
       SuperscriptBox["q", "2"], " ", 
       SuperscriptBox["r", "2"]}]}]]}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.901460667871182*^9, 3.9014608085741577`*^9}, {
  3.901461988566093*^9, 3.9014619989554653`*^9}, {3.9014620889150543`*^9, 
  3.901462125612288*^9}, {3.9014621556756268`*^9, 3.901462180031458*^9}, {
  3.902935285880639*^9, 3.9029353293454723`*^9}, {3.90293645658235*^9, 
  3.902936457330035*^9}, {3.902996362783195*^9, 3.902996364405438*^9}},
 CellLabel->"In[267]:="],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["2", 
    RowBox[{
     RowBox[{"-", "5"}], "-", "N"}]], " ", 
   RowBox[{"(", 
    RowBox[{"N", "-", 
     RowBox[{
      SuperscriptBox["q", "2"], " ", 
      SuperscriptBox["r", "2"]}]}], ")"}], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{"1", "+", "N"}], "]"}]}], 
  RowBox[{
   RowBox[{"Gamma", "[", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"2", "+", "N", "-", 
       RowBox[{"q", " ", "r"}]}], ")"}]}], "]"}], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"2", "+", "N", "+", 
       RowBox[{"q", " ", "r"}]}], ")"}]}], "]"}]}]]], "Output",
 CellChangeTimes->{
  3.901460810442198*^9, 3.901461708196556*^9, 3.901461960782083*^9, 
   3.901462000474043*^9, {3.901462175668049*^9, 3.90146218458046*^9}, 
   3.9029353370452147`*^9, 3.902936460617943*^9, 3.902996368293189*^9},
 CellLabel->"Out[267]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", " ", "/@", " ", 
  RowBox[{"Asymptotic", "[", 
   RowBox[{
    RowBox[{"F2", "[", 
     RowBox[{"\[Beta]", ",", "q", ",", " ", 
      RowBox[{"z", " ", 
       RowBox[{
        RowBox[{"Sqrt", "[", "N", "]"}], "/", "q"}]}], ",", " ", "N"}], "]"}],
     ",", 
    RowBox[{"{", 
     RowBox[{"N", " ", ",", " ", "Infinity", ",", "2"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.902936241872164*^9, 3.90293628613745*^9}, {
  3.902936350068883*^9, 3.902936402555534*^9}, {3.9029364671326637`*^9, 
  3.902936487214863*^9}, {3.902995630722101*^9, 3.902995659772298*^9}},
 CellLabel->"In[268]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["z", "2"], "2"]}]], " ", 
     SqrtBox["N"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["z", "2"]}], ")"}]}], 
    RowBox[{"16", " ", 
     SqrtBox[
      RowBox[{"2", " ", "\[Pi]"}]]}]]}], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       SuperscriptBox["z", "2"], "2"]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["z", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"3", "-", 
      RowBox[{"6", " ", 
       SuperscriptBox["z", "2"]}], "+", 
      SuperscriptBox["z", "4"]}], ")"}]}], 
   RowBox[{"192", " ", 
    SqrtBox["N"], " ", 
    SqrtBox[
     RowBox[{"2", " ", "\[Pi]"}]]}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       SuperscriptBox["z", "2"], "2"]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "z"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "z"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"45", "-", 
      RowBox[{"660", " ", 
       SuperscriptBox["z", "2"]}], "+", 
      RowBox[{"570", " ", 
       SuperscriptBox["z", "4"]}], "-", 
      RowBox[{"108", " ", 
       SuperscriptBox["z", "6"]}], "+", 
      RowBox[{"5", " ", 
       SuperscriptBox["z", "8"]}]}], ")"}]}], 
   RowBox[{"23040", " ", 
    SuperscriptBox["N", 
     RowBox[{"3", "/", "2"}]], " ", 
    SqrtBox[
     RowBox[{"2", " ", "\[Pi]"}]]}]]}]], "Output",
 CellChangeTimes->{{3.902936272442272*^9, 3.902936288594417*^9}, {
   3.9029363526166677`*^9, 3.902936403338293*^9}, {3.902936473495675*^9, 
   3.902936489331286*^9}, {3.902995645709332*^9, 3.9029956627557993`*^9}, 
   3.902996372812387*^9},
 CellLabel->"Out[268]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EE", " ", "=", 
  RowBox[{
   RowBox[{"1", "/", "2"}], " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      FractionBox[
       SqrtBox["N"], 
       RowBox[{"16", " ", 
        SqrtBox[
         RowBox[{"2", " ", "\[Pi]"}]]}]], " ", 
      RowBox[{
       RowBox[{"N", "^", "3"}], "/", 
       RowBox[{"(", 
        RowBox[{"3", " ", "*", "3", " ", 
         RowBox[{"Zeta", "[", "3", "]"}]}], ")"}]}], 
      RowBox[{"E", "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "\[Mu]"}], " ", "N"}], ")"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"N", ",", "0", ",", " ", "Infinity"}], "}"}], ",", " ", 
     RowBox[{"GenerateConditions", "->", "False"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.902936824383461*^9, 3.902936904525135*^9}, {
   3.902937092697287*^9, 3.90293709544517*^9}, 3.902951520439208*^9, {
   3.902995155691743*^9, 3.902995156611526*^9}, {3.9029963883348827`*^9, 
   3.902996389588799*^9}},
 CellLabel->"In[269]:="],

Cell[BoxData[
 FractionBox["35", 
  RowBox[{"1536", " ", 
   SqrtBox["2"], " ", 
   SuperscriptBox["\[Mu]", 
    RowBox[{"9", "/", "2"}]], " ", 
   RowBox[{"Zeta", "[", "3", "]"}]}]]], "Output",
 CellChangeTimes->{3.902936907350292*^9, 3.902937095918735*^9, 
  3.90295153288824*^9, 3.902995160086825*^9, 3.902996392791129*^9},
 CellLabel->"Out[269]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Zlim", " ", "=", 
  RowBox[{"Asymptotic", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Binomial", "[", 
      RowBox[{"N", ",", 
       RowBox[{"N", "/", "2"}]}], "]"}], 
     RowBox[{"2", "^", 
      RowBox[{"(", 
       RowBox[{"-", "N"}], ")"}]}], " ", 
     RowBox[{
      RowBox[{"N", "^", "2"}], "/", 
      RowBox[{"(", " ", 
       RowBox[{"2", " ", 
        RowBox[{"Zeta", "[", "2", "]"}]}], ")"}]}]}], ",", 
    RowBox[{"N", "->", "Infinity"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.90293693044101*^9, 3.902936945613091*^9}, {
  3.9029369814946537`*^9, 3.9029370155320253`*^9}},
 CellLabel->"In[270]:="],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", 
   SqrtBox["2"], " ", 
   SuperscriptBox["N", 
    RowBox[{"3", "/", "2"}]]}], 
  SuperscriptBox["\[Pi]", 
   RowBox[{"5", "/", "2"}]]]], "Output",
 CellChangeTimes->{3.902937020131505*^9, 3.9029515405862293`*^9, 
  3.90299639967356*^9},
 CellLabel->"Out[270]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{"ZZ", " ", "=", 
   RowBox[{
    RowBox[{"1", "/", "2"}], " ", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"Zlim", "  ", 
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", " ", "\[Mu]"}], " ", "N"}], ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"N", ",", "0", ",", "Infinity"}], "}"}], ",", " ", 
      RowBox[{"GenerateConditions", "->", "False"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.90293693044101*^9, 3.902936945613091*^9}, {
  3.9029369814946537`*^9, 3.902937043071083*^9}},
 CellLabel->"In[271]:="],

Cell[BoxData[
 FractionBox["9", 
  RowBox[{"4", " ", 
   SqrtBox["2"], " ", 
   SuperscriptBox["\[Pi]", "2"], " ", 
   SuperscriptBox["\[Mu]", 
    RowBox[{"5", "/", "2"}]]}]]], "Output",
 CellChangeTimes->{3.902937050797399*^9, 3.902951544178952*^9, 
  3.902996401630706*^9},
 CellLabel->"Out[271]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"result", " ", "for", " ", "r"}], "=", 
    RowBox[{
    "0", " ", "contributrion", " ", "to", " ", "the", " ", "enstrophy"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"result", " ", "=", " ", 
   RowBox[{"EE", "/", "ZZ"}]}]}]], "Input",
 CellChangeTimes->{{3.902937059258428*^9, 3.9029371033042593`*^9}},
 CellLabel->"In[272]:="],

Cell[BoxData[
 FractionBox[
  RowBox[{"35", " ", 
   SuperscriptBox["\[Pi]", "2"]}], 
  RowBox[{"3456", " ", 
   SuperscriptBox["\[Mu]", "2"], " ", 
   RowBox[{"Zeta", "[", "3", "]"}]}]]], "Output",
 CellChangeTimes->{3.902937104461052*^9, 3.9029515485763702`*^9, 
  3.9029951700541077`*^9, 3.902996405200693*^9},
 CellLabel->"Out[272]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"35", " ", 
     SuperscriptBox["\[Pi]", "2"]}], 
    RowBox[{"3456", " ", 
     SuperscriptBox["\[Mu]", "2"], " ", 
     RowBox[{"Zeta", "[", "3", "]"}]}]], ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.902951894109988*^9, 3.902951909263484*^9}, {
   3.9029519404392*^9, 3.902951941408949*^9}, 3.9029952161193113`*^9, 
   3.90299641462866*^9},
 CellLabel->"In[273]:="],

Cell[BoxData[
 FractionBox["0.08315129725122778758817153626646535343`10.", 
  SuperscriptBox["\[Mu]", "2"]]], "Output",
 CellChangeTimes->{3.90295190969184*^9, 3.90295194212076*^9, 
  3.902995218737793*^9, 3.902996416518244*^9},
 CellLabel->"Out[273]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"now", " ", "the", " ", "hard", " ", 
   RowBox[{"part", "--"}], " ", "averaging", " ", "over", " ", "the", " ", 
   "Euler", " ", "ensemble"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.901468175616658*^9, 3.901468197935801*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SumP", "[", 
    RowBox[{"F_", ",", " ", "q_", ",", "r_", ",", " ", "M_"}], "]"}], ":=", 
   " ", "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"betas", ",", " ", "ints"}], "}"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{"betas", " ", "=", " ", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"q", "-", "1"}], "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"GCD", "[", 
               RowBox[{"#", ",", "q"}], "]"}], "==", "1"}], "&"}]}], "]"}], 
          "2", " ", 
          RowBox[{"Pi", "/", "q"}]}], ",", "20"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ints", " ", "=", "  ", 
       RowBox[{
        RowBox[{
         RowBox[{"F", "[", 
          RowBox[{"#", ",", 
           RowBox[{"q", " ", "r"}], ",", " ", "M"}], "]"}], "&"}], " ", "/@", 
        " ", "betas"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{"Plus", " ", "@@", "  ", "ints"}], ")"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.901461241760738*^9, 3.9014613789065237`*^9}, {
  3.901461448383069*^9, 3.901461453341297*^9}, {3.901462070762549*^9, 
  3.90146207145967*^9}, {3.9014622128701572`*^9, 3.901462221378312*^9}, {
  3.90146238965434*^9, 3.901462395179144*^9}},
 CellLabel->"In[37]:="],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9013567196866493`*^9, 3.9013567430032587`*^9}, {
   3.901356779536899*^9, 3.90135678358738*^9}, {3.9013568527692537`*^9, 
   3.9013569096632338`*^9}, {3.901356987441106*^9, 3.901357022215753*^9}, {
   3.901357059536209*^9, 3.901357060179349*^9}, {3.901357099479446*^9, 
   3.901357134281192*^9}, {3.901357253224051*^9, 3.901357267483021*^9}, {
   3.901357309683888*^9, 3.901357518535038*^9}, {3.9013575547272453`*^9, 
   3.901357584235429*^9}, {3.901379101444893*^9, 3.901379185218809*^9}, {
   3.901379711530897*^9, 3.901379781800091*^9}, {3.901379829648801*^9, 
   3.901379852713449*^9}, {3.9013799407364883`*^9, 3.901379945178576*^9}, {
   3.901379996879387*^9, 3.901380000263979*^9}, {3.9013801731558933`*^9, 
   3.901380277761099*^9}, {3.90138031083904*^9, 3.901380332780057*^9}, {
   3.901380396018594*^9, 3.901380431140622*^9}, {3.9013847765413733`*^9, 
   3.901384821866418*^9}, {3.9013848892987423`*^9, 3.901384906947481*^9}, {
   3.9013892311619*^9, 3.901389274028654*^9}, {3.901389691361171*^9, 
   3.9013897235843*^9}, {3.901389766021419*^9, 3.901389770007926*^9}, {
   3.901391676797057*^9, 3.901391687669396*^9}, {3.901391785352084*^9, 
   3.901391832798975*^9}, 3.901461568258874*^9, 3.901461599506727*^9},
 CellLabel->"In[24]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EulerSum", "[", 
    RowBox[{"F_", ",", " ", "M_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OddQ", "[", 
          RowBox[{"M", "+", " ", 
           RowBox[{"q", " ", "r"}]}], "]"}], ",", "0", ",", 
         RowBox[{
          RowBox[{"Binomial", "[", 
           RowBox[{"M", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"M", "+", 
               RowBox[{"q", " ", "r"}]}], ")"}], "/", "2"}]}], "]"}], 
          RowBox[{"2", "^", 
           RowBox[{"(", 
            RowBox[{"-", "M"}], ")"}]}], 
          RowBox[{"SumP", "[", 
           RowBox[{"F", ",", "q", ",", "r", ",", "M"}], "]"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", 
         RowBox[{"-", 
          RowBox[{"Floor", "[", 
           RowBox[{"M", "/", "q"}], "]"}]}], ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"M", "/", "q"}], "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", 
       RowBox[{"2", " ", "+", " ", 
        RowBox[{"Mod", "[", 
         RowBox[{"M", ",", "2"}], "]"}]}], ",", 
       RowBox[{"M", "-", "2"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.90135662535428*^9, 3.901356644827675*^9}, {
  3.901356696499022*^9, 3.901356702356668*^9}, {3.901356748660905*^9, 
  3.9013567679572077`*^9}, {3.901357165616139*^9, 3.901357259386386*^9}, {
  3.901357590890729*^9, 3.9013575990221033`*^9}, {3.9013791334020452`*^9, 
  3.901379142406365*^9}, {3.901379327712967*^9, 3.901379328636732*^9}, {
  3.901379486998364*^9, 3.9013794973585863`*^9}, {3.90137956401222*^9, 
  3.901379582867276*^9}, {3.901379625693411*^9, 3.901379639922347*^9}, {
  3.9014614324781446`*^9, 3.901461491397687*^9}, {3.901462259392006*^9, 
  3.901462261023712*^9}},
 CellLabel->"In[33]:="],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.901379268937112*^9, 3.90137948008988*^9}, {
   3.9013796575841827`*^9, 3.901379687178442*^9}, {3.9013799522434597`*^9, 
   3.901379959537685*^9}, 3.9013805149750967`*^9, 3.901461514661448*^9},
 CellLabel->"In[26]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"PartitionFunction", "[", "M_", "]"}], ":=", "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{"PartitionFunction", "[", "M", "]"}], "=", "\[IndentingNewLine]", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OddQ", "[", 
          RowBox[{"M", "+", " ", 
           RowBox[{"q", " ", "r"}]}], "]"}], ",", "0", ",", 
         RowBox[{
          RowBox[{"Binomial", "[", 
           RowBox[{"M", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"M", "+", 
               RowBox[{"q", " ", "r"}]}], ")"}], "/", "2"}]}], "]"}], 
          RowBox[{"2", "^", 
           RowBox[{"(", 
            RowBox[{"-", "M"}], ")"}]}], 
          RowBox[{"EulerPhi", "[", "q", "]"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", 
         RowBox[{"-", 
          RowBox[{"Floor", "[", 
           RowBox[{"M", "/", "q"}], "]"}]}], ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"M", "/", "q"}], "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", 
       RowBox[{"2", " ", "+", " ", 
        RowBox[{"Mod", "[", 
         RowBox[{"M", ",", "2"}], "]"}]}], ",", 
       RowBox[{"M", "-", "2"}]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.901380086683058*^9, 3.9013801368897333`*^9}, {
  3.901380389570856*^9, 3.901380409369204*^9}, {3.901381006520389*^9, 
  3.901381019164912*^9}, {3.901461574172297*^9, 3.901461577378559*^9}},
 CellLabel->"In[34]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EulerAverage", "[", 
    RowBox[{"F_", ",", " ", "M_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"EulerSum", "[", 
     RowBox[{"F", ",", "M"}], "]"}], "/", 
    RowBox[{"PartitionFunction", "[", "M", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.901380595871481*^9, 3.901380668221685*^9}},
 CellLabel->"In[35]:="],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.901380764170403*^9, 3.901380879340869*^9}, {
  3.9013809442195377`*^9, 3.9013809579486637`*^9}, {3.901382305836697*^9, 
  3.901382314162818*^9}},
 CellLabel->"In[37]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EulerAverage", "[", 
  RowBox[{"F2", ",", " ", "1000"}], "]"}]], "Input",
 CellChangeTimes->{{3.901380744629715*^9, 3.901380790316462*^9}, {
   3.90138096400284*^9, 3.9013809799468412`*^9}, {3.901462012837816*^9, 
   3.901462019233377*^9}, {3.90146230916685*^9, 3.901462311238759*^9}, 
   3.901462354466385*^9, {3.901462406378491*^9, 3.901462419347949*^9}},
 CellLabel->"In[40]:="],

Cell[BoxData["118.86270222802317864345868296750763576119`17.2148176913544"], \
"Output",
 CellChangeTimes->{{3.901462415740324*^9, 3.901462440013363*^9}},
 CellLabel->"Out[40]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "this", " ", "takes", " ", "a", " ", "few", " ", "minutes", " ", "or", " ",
     "half", " ", "an", " ", "hour"}], ",", " ", 
   RowBox[{"depending", " ", "of", " ", "number", " ", "of", " ", "cores"}]}],
   "*)"}]], "Input",
 CellChangeTimes->{{3.9014682454069443`*^9, 3.9014682783809853`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ParallelTable", "[", 
   RowBox[{
    RowBox[{"PartitionFunction", "[", "M", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"M", ",", "3", ",", "1000"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.901381099756257*^9, 3.901381191974616*^9}, 
   3.9013850509060507`*^9},
 CellLabel->"In[41]:="],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.901381088025284*^9, 3.901381093983873*^9}, 
   3.90138154739517*^9},
 CellLabel->"In[40]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"F2data", " ", "=", " ", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"EulerAverage", "[", 
      RowBox[{"F2", ",", "M"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"M", ",", "4", ",", "1000"}], "}"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.901381753738945*^9, 3.90138180690084*^9}, 
   3.901381879891508*^9, {3.9014624748328867`*^9, 3.901462488001957*^9}},
 CellLabel->"In[42]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"F2data", "[", 
   RowBox[{"[", 
    RowBox[{";;", "2"}], "]"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"garbage", ",", " ", 
    RowBox[{"too", " ", "low", " ", "M"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.901468312440999*^9, 3.901468321207912*^9}, {
  3.901468368273754*^9, 3.901468389436236*^9}},
 CellLabel->"In[76]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0``41.596870903509576", ",", 
   RowBox[{
   "-", "0.00325520833333333333333333333333333334`19.139350763337735"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.901468323000334*^9, 3.9014683904343853`*^9},
 CellLabel->"Out[76]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f2test", "=", 
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"4", ",", "1000"}], "]"}], ",", "F2data"}], "}"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", 
       RowBox[{"-", "1"}], ",", "2"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.901382371504871*^9, 3.901382388740486*^9}, {
  3.9013824244452887`*^9, 3.901382509422052*^9}, {3.901382574435416*^9, 
  3.901382577124901*^9}, {3.901382640932499*^9, 3.90138277090802*^9}, {
  3.901464080506844*^9, 3.901464092827639*^9}},
 CellLabel->"In[43]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f2test", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.901383522562932*^9, 3.9013835377544622`*^9}, 
   3.901464099292379*^9},
 CellLabel->"In[44]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "6", ",", "0.0069835574127906976744186046511627907`18.983496610082305"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9013835391543627`*^9, 3.901385197667512*^9, 
  3.9013912295276203`*^9, 3.90141318508317*^9, 3.901464100370597*^9},
 CellLabel->"Out[44]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "f2test", "]"}]], "Input",
 CellChangeTimes->{{3.9014641636140633`*^9, 3.901464175300297*^9}},
 CellLabel->"In[47]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"498", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.9014641772064543`*^9},
 CellLabel->"Out[47]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"f2test", ",", 
   RowBox[{"PlotLabel", "->", "\"\<<\[Omega].\[Omega]>, N <= 1000\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.901382224756156*^9, 3.901382251051756*^9}, {
   3.90138280886157*^9, 3.9013828109169703`*^9}, {3.901382844165392*^9, 
   3.901382869984277*^9}, 3.90146410773251*^9, {3.9014644156662903`*^9, 
   3.901464478980295*^9}, {3.9014645784701853`*^9, 3.9014645904925222`*^9}},
 CellLabel->"In[57]:="],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
ppGLxtrViZNOuuH/AGj2BUg=
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"<\[Omega].\[Omega]>, N <= 1000\"", TraditionalForm],
  PlotRange->{{0, 1000.}, {0, 118.86270222802318`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.901382243186524*^9, 3.9013822516965322`*^9}, 
   3.901382814187037*^9, {3.901382850075034*^9, 3.9013828704056187`*^9}, 
   3.901385197862774*^9, 3.901391229725293*^9, 3.901413185693101*^9, 
   3.9014641105067253`*^9, 3.901464420978528*^9, 3.901464482732579*^9, 
   3.9014645923242493`*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"4975482b-c5c0-4010-bc2e-67d8f76ffe2b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f2test", "[", 
  RowBox[{"[", "10", "]"}], "]"}]], "Input",
 CellChangeTimes->{3.901465276169571*^9},
 CellLabel->"In[62]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "24", ",", "0.31798101602223720920143451841308278934`18.790537774559628"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9014652788861437`*^9},
 CellLabel->"Out[62]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"f2test", "[", 
    RowBox[{"[", 
     RowBox[{";;", "10"}], "]"}], "]"}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<<\[Omega].\[Omega]>, N < 25\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.901464560502042*^9, 3.9014645737083473`*^9}, {
   3.90146461383995*^9, 3.9014646429723167`*^9}, 3.9014652175533953`*^9, {
   3.901465284156248*^9, 3.901465287434198*^9}},
 CellLabel->"In[63]:="],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], 
    PointBox[{{6., 0.006983557412790698}, {8., 0.02403409716109155}, {10., 
     0.045167057180567405`}, {12., 0.07494675687847108}, {14., 
     0.10566829896549028`}, {16., 0.1393006948083889}, {18., 
     0.18231447075803822`}, {20., 0.22187956948910545`}, {22., 
     0.2639910775237148}, {24., 0.3179810160222372}}]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{5.625000000000012, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"<\[Omega].\[Omega]>, N < 25\"", TraditionalForm],
  PlotRange->{{5.625000000000012, 24.}, {0, 0.3179810160222372}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.901464597465217*^9, 3.9014646144430943`*^9}, 
   3.901464644858718*^9, 3.901465221083353*^9, 3.901465290292448*^9},
 CellLabel->"Out[63]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f2model", " ", "=", " ", 
  RowBox[{"LinearModelFit", "[", 
   RowBox[{
    RowBox[{"Log", "[", 
     RowBox[{"f2test", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"-", "200"}], ";;"}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", "x", "}"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.901382913156711*^9, 3.901382925244788*^9}, {
  3.901383586889987*^9, 3.901383643288706*^9}, {3.901464118549013*^9, 
  3.901464122554562*^9}},
 CellLabel->"In[48]:="],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{
       RowBox[{"-", 
        RowBox[{"\[LeftSkeleton]", "59", "\[RightSkeleton]"}]}], "+", 
       RowBox[{
        RowBox[{"\[LeftSkeleton]", "59", "\[RightSkeleton]"}], " ", "x"}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Linear", {-5.65567732246692912450156129375410754765`17.894061024863735, 
      1.51052186123510035705646578378391441571`17.894061024863735}, \
{{$CellContext`x}, {1, $CellContext`x}}, {0, 0}}, {{
     1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735, 1.`17.894061024863735, 
      1.`17.894061024863735, 1.`17.894061024863735}}, {{
      Log[602], 4.0120709511138626455911693540162319465`18.03793298307294}, {
      Log[604], 4.01641603591899025420295399955392078055`18.037072346298423}, {
      Log[606], 4.02160989696419027724353563959000797237`18.03616843440605}, {
     
      Log[608], 4.02718728524586011135344710956327056082`18.035272200147457}, {
      Log[610], 4.03127166147032695638791965883262894194`18.03442181337242}, {
     
      Log[612], 4.03724469788981920974464624748081037605`18.033520205654938}, {
      Log[614], 4.04213753002870775509700547889523518414`18.032637210902717}, {
      Log[616], 4.04606088394183010372356033258173598896`18.031785020775654}, {
      Log[618], 4.05211616251025484056075457400354841445`18.030887925707358}, {
      Log[620], 4.05641922356645570360230477814437186928`18.02997208427717}, {
     
      Log[622], 4.06071751352487773118151014317342864163`18.029115397168997}, {
      Log[624], 4.06584397224930779488986583711011811397`18.028237175028952}, {
      Log[626], 4.07088102269069777747120151655931793975`18.027361371632416}, {
      Log[628], 4.0755410178243389619175618434628128266`18.026534977695775}, {
     
      Log[630], 4.08091003577333297773086918101906750906`18.025677028221814}, {
      Log[632], 4.08584094872971656317192519756914148032`18.02477127326362}, {
     
      Log[634], 4.08967532488337256183489517623683309757`18.023941305864003}, {
      Log[636], 4.09457935253665798786041512891414069423`18.023065933843455}, {
      Log[638], 4.09960907696331679034095192299312309332`18.02218725089861}, {
     
      Log[640], 4.10457061173580643017912819863951034802`18.021419833209087}, {
      Log[642], 4.10979203503872184287050417805572968127`18.020537036832355}, {
      Log[644], 4.11393176316961800655988981802021496019`18.019648719067188}, {
      Log[646], 4.11803022441004509770367368887582763415`18.018834556464995}, {
      Log[648], 4.12360754966403092924743018377603590797`18.017979007827062}, {
      Log[650], 4.12769471052429562653528739017905254316`18.01709592680647}, {
     
      Log[652], 4.13234603243856188066093661434784766849`18.01630430639152}, {
     
      Log[654], 4.13757076414042850999805341823902175439`18.01545937267795}, {
     
      Log[656], 4.14163493194091894039632140705244444047`18.01458431675569}, {
     
      Log[658], 4.14616149621238486546578567683081929951`18.01379468489052}, {
     
      Log[660], 4.1512216537198669151013685600933069938`18.012949910773962}, {
     
      Log[662], 4.15551216855448012468402861426380292648`18.012054720236712}, {
      Log[664], 4.15915091778134595059978442430351520905`18.011253429696193}, {
      Log[666], 4.16422739800870308210791500519382055653`18.010432913571467}, {
      Log[668], 4.16963206988479115600260974070327145369`18.009605109946342}, {
      Log[670], 4.17359311240318495019359075980293844311`18.008840696477787}, {
      Log[672], 4.1785785641102773799840999636818558702`18.00798804376519}, {
      Log[674], 4.18314221397969342040810471587501352374`18.00715431769795}, {
     
      Log[676], 4.1867119164741434561781660941376008739`18.006364336145122}, {
     
      Log[678], 4.19190725158033354715788029050812860753`18.005524775822714}, {
      Log[680], 4.19582671555072084660977218420971298938`18.004675085586577}, {
      Log[682], 4.2004019724545524688999089883324396763`18.00390610487992}, {
      Log[684], 4.2052013366986373809649313942251826446`18.00309071254442}, {
      Log[686], 4.20914685324191226892530591163084546567`18.002249718757316}, {
      Log[688], 4.21367889127907426731520064191711409089`18.001481541177466}, {
      Log[690], 4.21823864695770212202632355723032551192`18.00066398797609}, {
     
      Log[692], 4.22271245975680171189214360346682118674`17.99983424771883}, {
     
      Log[694], 4.22619682332141002762399766896534417977`17.99906204861322}, {
     
      Log[696], 4.23122425414443399453745391284646196567`17.99825631267105}, {
     
      Log[698], 4.23583567692088522230112361950881228905`17.997437802444352}, {
      Log[700], 4.23963919194782287030899252103951217119`17.996699225469122}, {
      Log[702], 4.24457535293360320474112416806665675361`17.99586650842086}, {
     
      Log[704], 4.2484454305207326098794508959580124869`17.995042167942813}, {
     
      Log[706], 4.25237824378928086452016193692454655502`17.994314472235068}, {
      Log[708], 4.25725260767266915953851030650087187972`17.99349986377163}, {
     
      Log[710], 4.26160769851960852001073455443571996058`17.992704771261515}, {
      Log[712], 4.26532420085659143553036099102594273428`17.991934290894772}, {
      Log[714], 4.26972895525079324163751308310505135176`17.991138765056267}, {
      Log[716], 4.27397447217818814194535964184660331282`17.990344907840857}, {
      Log[718], 4.27857200267002923217535250230088050021`17.989628760224285}, {
      Log[720], 4.28289277542736165255555705639171778082`17.988834197036354}, {
      Log[722], 4.28673792658259753076613830244145904685`17.988001341383246}, {
      Log[724], 4.29075134960796215057308230378394075636`17.987284604202312}, {
      Log[726], 4.29504402297379587195704132544955093424`17.98649591045043}, {
     
      Log[728], 4.29961859771244611369194114494233186951`17.98570912346577}, {
     
      Log[730], 4.30328784867988524760077596382280718634`17.984971081852102}, {
      Log[732], 4.3078458982123852791996896597174576492`17.98417205306198}, {
      Log[734], 4.31182004221137021497032268037052685152`17.983401816397123}, {
      Log[736], 4.31509577808994739530207123903153832906`17.982665617844003}, {
      Log[738], 4.32006083294988716334405581916458327448`17.981874705893624}, {
      Log[740], 4.32409770464499882842567911158297635105`17.981110684284918}, {
      Log[742], 4.3276835573926643494293210175510214836`17.980367259013956}, {
     
      Log[744], 4.33245746360598263961976284388218566124`17.97961277886075}, {
     
      Log[746], 4.33605674981782052138863417315684530086`17.978827692717843}, {
      Log[748], 4.33998454324561994106982323016077369114`17.97810959712711}, {
     
      Log[750], 4.34442444437864428469388536588422097401`17.977353916612206}, {
      Log[752], 4.34867163691940785411903121787305263077`17.976570104649955}, {
      Log[754], 4.35190568568653885681062977581670260187`17.975852057967955}, {
      Log[756], 4.35622666428868707260496885603849241312`17.9750989501089}, {
      Log[758], 4.36056380302317583100463783551148021452`17.97432122151636}, {
     
      Log[760], 4.36373388962293352039595904584925335559`17.97360468523736}, {
     
      Log[762], 4.36850431419731810191926980573788128558`17.972850415318085}, {
      Log[764], 4.37198634036387789640012485506931003421`17.97207893153851}, {
     
      Log[766], 4.37568454340972274640527539650792918717`17.971388115022545}, {
      Log[768], 4.3802484808066761021843723858369808165`17.970626433088093}, {
     
      Log[770], 4.38405363495529494983924057695037566643`17.969883946200333}, {
      Log[772], 4.3877359083679611927402623651413946928`17.969155492457922}, {
     
      Log[774], 4.39175907147715723783461342091146297662`17.96840648818659}, {
     
      Log[776], 4.39520878154387475623257490973086754881`17.96764653730524}, {
     
      Log[778], 4.39908374000395553238000242374571258457`17.966958827813993}, {
      Log[780], 4.40344079505019091586068890215048068811`17.966220169205688}, {
      Log[782], 4.4073567072310143370495034951550442676`17.965465000327242}, {
     
      Log[784], 4.4110066555143734076351259719659738748`17.96480245504973}, {
      Log[786], 4.41526660803402755492132793953466211993`17.96406609878949}, {
     
      Log[788], 4.41930932235845169867940288106914821638`17.96332069769934}, {
     
      Log[790], 4.42236184116015227890729890098878101351`17.962627585509825}, {
      Log[792], 4.42658185478252454630088165253471719849`17.9618781051211}, {
      Log[794], 4.43054732705866498726592498301955904675`17.96114988750194}, {
     
      Log[796], 4.43391980261494468528539820396003916063`17.960484333474778}, {
      Log[798], 4.43823911017201052764112060895514869877`17.959742939657847}, {
      Log[800], 4.44174034239508016985892986119959498419`17.958994336052882}, {
      Log[802], 4.44531445753139602854649612023974244893`17.95831707756163}, {
     
      Log[804], 4.44920040886248934429464024453706472904`17.957592019932346}, {
      Log[806], 4.45288890165381848545602559454144766283`17.95687821369422}, {
     
      Log[808], 4.45718119175301900389134328447585118197`17.95622532702974}, {
     
      Log[810], 4.46103022665220816599791137018308064749`17.955504031768733}, {
      Log[812], 4.46444392805223119976698393857542316324`17.954749119968348}, {
      Log[814], 4.46767303110166800664616638242080037907`17.95407464848788}, {
     
      Log[816], 4.4716800158995807490605732901916241558`17.953364699808834}, {
     
      Log[818], 4.475631963186067510902146423925816655`17.952643398476393}, {
      Log[820], 4.47884693030531208895081344903681659961`17.951993083856877}, {
      Log[822], 4.48337361621735160609848411263942914838`17.951273817336055}, {
      Log[824], 4.48659670170792734004188586845406883778`17.9505498434733}, {
      Log[826], 4.4895245591591050901462111221490423975`17.949883229759088}, {
     
      Log[828], 4.49404605985885523057527642344505740408`17.9491640861345}, {
      Log[830], 4.49728972508469666777736622147146516719`17.94844670361986}, {
     
      Log[832], 4.50046262487505342107104350403618222564`17.947769574774654}, {
      Log[834], 4.50431721941224726900215704509763413416`17.947069397796305}, {
      Log[836], 4.50815124145884938321962552635961289188`17.946380959166117}, {
      Log[838], 4.51188315797977143735456635840196183099`17.945734991230754}, {
      Log[840], 4.51565143153357717190613262539828032296`17.94503902534345}, {
     
      Log[842], 4.51903664737120920384416051049006275388`17.944297308219067}, {
      Log[844], 4.52201317783019178687425435892407702003`17.94365191582089}, {
     
      Log[846], 4.52569116391838662032321024736884862552`17.9429552272565}, {
      Log[848], 4.5296600238883989219697525019578659832`17.942264068035676}, {
     
      Log[850], 4.53325157798041188235548730936800623554`17.94164168899495}, {
     
      Log[852], 4.53723178646494326824063958674533254383`17.94093721417273}, {
     
      Log[854], 4.54060181534301593445306819526342705317`17.940255607251007}, {
      Log[856], 4.54364369031148770259982359869215097337`17.939607510502498}, {
      Log[858], 4.54772756736924649213506103406609718994`17.93891128904618}, {
     
      Log[860], 4.55097270079131430537109597447160545233`17.93821360062943}, {
     
      Log[862], 4.55404956097522959324198852349085527913`17.93755745521893}, {
     
      Log[864], 4.55797400144679853471153551368922692504`17.936876636933548}, {
      Log[866], 4.56103315216287093343502195401128292529`17.936182047913235}, {
      Log[868], 4.56441156067749520765328581684575097135`17.935545726997173}, {
      Log[870], 4.56836081172011833360203704852710007251`17.934872710137313}, {
      Log[872], 4.57191902901893556449695498911502752863`17.934184285209525}, {
      Log[874], 4.57499596188378292488135113133884422414`17.933569323855437}, {
      Log[876], 4.57871574288816935519339121147859399184`17.93290280258255}, {
     
      Log[878], 4.58267832180958995380893436915348140873`17.93222422519967}, {
     
      Log[880], 4.58540957380902310958774466844806725101`17.931591597922356}, {
      Log[882], 4.58928766037668437124550916686121211668`17.930904837940044}, {
      Log[884], 4.59240478766854870425809667084306824838`17.93021517221704}, {
     
      Log[886], 4.59533124658386000005550674470490002222`17.929595497337118}, {
      Log[888], 4.59920258001647365650590475022554275564`17.928914869815465}, {
      Log[890], 4.60221042609348152556674245704532268216`17.928238629761005}, {
      Log[892], 4.60563338065367085434429822169809701849`17.92761511033143}, {
     
      Log[894], 4.60929640606932479491947503539833865316`17.926956027732412}, {
      Log[896], 4.61251137169226685717155685052282755154`17.92630088521258}, {
     
      Log[898], 4.6159711784176815732512293551112959519`17.92567954220403}, {
      Log[900], 4.61967010132055317063727237792068890623`17.925030186800647}, {
      Log[902], 4.62296853893426937919983913794425345484`17.924358084580692}, {
      Log[904], 4.62606333197867568010783157866703703707`17.923765288540586}, {
      Log[906], 4.62981327561438869471652433646397578235`17.92311104452621}, {
     
      Log[908], 4.63331433470744840526488490057197131257`17.922447321735334}, {
      Log[910], 4.63595871328397370101042044490448435846`17.92183303699172}, {
     
      Log[912], 4.63984297396643334147335199867722218841`17.92115998421085}, {
     
      Log[914], 4.64279470963606986986913037509386006212`17.92049924964492}, {
     
      Log[916], 4.64574870018270691833077104125944891212`17.91990664727546}, {
     
      Log[918], 4.64949485153837085571272271381728683059`17.91924448794894}, {
     
      Log[920], 4.65288402250147686945399660254015855482`17.918601154520527}, {
      Log[922], 4.65578321639801672391519516810512972709`17.91798232666735}, {
     
      Log[924], 4.65914207422815748647800592791160535918`17.917334424857607}, {
      Log[926], 4.66248119822537345646418158387357602827`17.916688791009143}, {
      Log[928], 4.66569547770384412295435411854580900068`17.91609117670197}, {
     
      Log[930], 4.66910074848506883963207390151163146494`17.915451702337347}, {
      Log[932], 4.67210088147228432224756058641634085876`17.91478234988337}, {
     
      Log[934], 4.67524814109942566377333249397306520189`17.91420304806818}, {
     
      Log[936], 4.67856359918901508908720884702353198585`17.91356204874725}, {
     
      Log[938], 4.68236748522791407787699928999386806495`17.912932639327224}, {
      Log[940], 4.6851320511554131523350427241155155153`17.912334078874576}, {
     
      Log[942], 4.68868469745759114967090720410969879764`17.91168443593524}, {
     
      Log[944], 4.69149488352114993726913924429461052672`17.911040172604366}, {
      Log[946], 4.69428018040320013802840510332400949472`17.910464637099317}, {
      Log[948], 4.69823806216184463790711216001934333476`17.909818423961745}, {
      Log[950], 4.70103741130110994847219220940163154657`17.90917821450644}, {
     
      Log[952], 4.70413860993172161398316774537845579276`17.908593587351373}, {
      Log[954], 4.707653060647498009731437047276696304`17.907963456295235}, {
      Log[956], 4.71044174054194547607812185256043381759`17.90732713268184}, {
     
      Log[958], 4.71350132857939144250425013913876702871`17.906741170695625}, {
      Log[960], 4.71697392756833802606459188313876847281`17.906124047819326}, {
      Log[962], 4.72028271693369424138624050147670560054`17.905483855812196}, {
      Log[964], 4.72302896768807643041972083318525718177`17.904914164459747}, {
      Log[966], 4.72625752559885418401796211239633260166`17.904291416075537}, {
      Log[968], 4.72968185593409979804443936682162685371`17.903656400729947}, {
      Log[970], 4.73228566839098455258578644474209107772`17.903078131579903}, {
      Log[972], 4.73593180589360686897708857884467444738`17.90245633700528}, {
     
      Log[974], 4.73864777689456915030686148445924045469`17.901828696442283}, {
      Log[976], 4.7415331989428899071516113905021326066`17.90126256357438}, {
      Log[978], 4.74515847325805066507572862192320262612`17.900637299724274}, {
      Log[980], 4.74786468391205949467162820131259002975`17.900013603206542}, {
      Log[982], 4.7509753191304921777330593351245364062`17.899434977008127}, {
     
      Log[984], 4.75414056647728513219382951178100046837`17.898821635115233}, {
      Log[986], 4.75685014213102866868843035175161358062`17.898202459155456}, {
      Log[988], 4.7599490135976693675226847827321985113`17.897638700063975}, {
     
      Log[990], 4.76354668411111042862721423037460044341`17.89703709922366}, {
     
      Log[992], 4.76660441676353434644786491331527863903`17.89641540275966}, {
     
      Log[994], 4.76906744119801121652919078174547904407`17.895849450263388}, {
      Log[996], 4.77237838280562585001355804573330701464`17.895239860528182}, {
      Log[998], 4.77556735295383608820446788074234797679`17.894627190557436}, {
      Log[1000], 
      4.77796906422512639027009699853664919846`17.894061024863735}}, {{
     1.`17.894061024863735, 
      6.40025744530882103799542737824720333327`18.700258468352043}, {
     1.`17.894061024863735, 
      6.40357419793481494763070054240082942641`18.700483470903727}, {
     1.`17.894061024863735, 
      6.40687998606931445169667562529369142961`18.700707613710282}, {
     1.`17.894061024863735, 
      6.41017488196616700709518803917873637761`18.700930902937444}, {
     1.`17.894061024863735, 
      6.41345895716735693276938055810997895392`18.70115334468634}, {
     1.`17.894061024863735, 
      6.41673228251232608187448933463453108103`18.70137494499441}, {
     1.`17.894061024863735, 
      6.41999492814714246301569468874066885192`18.701595709836234}, {
     1.`17.894061024863735, 
      6.42324696353351977741899268578283873368`18.701815645124437}, {
     1.`17.894061024863735, 
      6.42648845745769077158107967343414309335`18.702034756710493}, {
     1.`17.894061024863735, 
      6.42971947803913723936438790068489798613`18.702253050385583}, {
     1.`17.894061024863735, 
      6.4329400927391794436132276868908588442`18.7024705318814}, {
     1.`17.894061024863735, 
      6.43615036836942766511766116432055058176`18.702687206870937}, {
     1.`17.894061024863735, 
      6.43935037110009852609599743071538692165`18.70290308096931}, {
     1.`17.894061024863735, 
      6.44254016646819867625890947931982838489`18.7031181597345}, {
     1.`17.894061024863735, 
      6.44571981938557837191383467197259534653`18.70333244866814}, {
     1.`17.894061024863735, 
      6.4488893941468574224246419058559406264`18.70354595321624}, {
     1.`17.894061024863735, 
      6.45204895443722592361699429075678787745`18.703758678769947}, {
     1.`17.894061024863735, 
      6.45519856334012214437417861886793661116`18.703970630666266}, {
     1.`17.894061024863735, 
      6.45833828334478988066244773178521747339`18.704181814188768}, {
     1.`17.894061024863735, 
      6.46146817635371754052138418343342361605`18.704392234568292}, {
     1.`17.894061024863735, 
      6.46458830368996117411687617540397927429`18.704601896983643}, {
     1.`17.894061024863735, 
      6.46769872610435361474656981816972898423`18.704810806562264}, {
     1.`17.894061024863735, 
      6.4707995037826018496757941712191566409`18.705018968380916}, {
     1.`17.894061024863735, 
      6.47389069635227469383267731206463252282`18.70522638746631}, {
     1.`17.894061024863735, 
      6.47697236288968279467223822947587045193`18.705433068795795}, {
     1.`17.894061024863735, 
      6.48004456192665295289939660903710301278`18.705639017297955}, {
     1.`17.894061024863735, 
      6.48310735145719870118979381058990392378`18.705844237853263}, {
     1.`17.894061024863735, 
      6.48616078894408904153569185887011386068`18.706048735294683}, {
     1.`17.894061024863735, 
      6.48920493132531720134353553467353000661`18.70625251440828}, {
     1.`17.894061024863735, 
      6.49223983502047122889241239103019578015`18.706455579933827}, {
     1.`17.894061024863735, 
      6.49526555593700821020184896103481337477`18.70665793656538}, {
     1.`17.894061024863735, 
      6.49828214947643385172716858766590015726`18.70685958895187}, {
     1.`17.894061024863735, 
      6.50128967054038913657581826633467514127`18.707060541697647}, {
     1.`17.894061024863735, 
      6.50428817353664572609421501966113250195`18.707260799363077}, {
     1.`17.894061024863735, 
      6.50727771238501174368806345104808695817`18.70746036646507}, {
     1.`17.894061024863735, 
      6.51025834052314954358675858765658827466`18.707659247477633}, {
     1.`17.894061024863735, 
      6.51323011091230703392209867610660778097`18.70785744683239}, {
     1.`17.894061024863735, 
      6.51619307604296409094143912604699034576`18.70805496891914}, {
     1.`17.894061024863735, 
      6.51914728794039556939460885199672394475`18.708251818086335}, {
     1.`17.894061024863735, 
      6.52209279817015238310199031547384387934`18.70844799864163}, {
     1.`17.894061024863735, 
      6.52502965784346209940834002396566307835`18.708643514852366}, {
     1.`17.894061024863735, 
      6.52795791762255046163398214864925808268`18.708838370946054}, {
     1.`17.894061024863735, 
      6.53087762772588522473329035178771575699`18.709032571110896}, {
     1.`17.894061024863735, 
      6.53378883793334366114177099917855330786`18.70922611949623}, {
     1.`17.894061024863735, 
      6.53669159759130506621998952341708603069`18.70941902021303}, {
     1.`17.894061024863735, 
      6.53958595561766956576796463135734460534`18.70961127733436}, {
     1.`17.894061024863735, 
      6.54247196050680450177090896784403610267`18.709802894895827}, {
     1.`17.894061024863735, 
      6.54534966033441964683021363365896701437`18.709993876896046}, {
     1.`17.894061024863735, 
      6.54821910276237247261671364395681627722`18.710184227297088}, {
     1.`17.894061024863735, 
      6.55108033504340467314133565281190814484`18.710373950024895}, {
     1.`17.894061024863735, 
      6.55393340402581111965645527379107228682`18.710563048969743}, {
     1.`17.894061024863735, 
      6.55677835615804240056533630671418870828`18.71075152798664}, {
     1.`17.894061024863735, 
      6.55961523749324207681295223864614657057`18.71093939089577}, {
     1.`17.894061024863735, 
      6.56244409369371976084575985355857646486`18.711126641482892}, {
     1.`17.894061024863735, 
      6.56526497003536110534744598719739830436`18.711313283499745}, {
     1.`17.894061024863735, 
      6.56807791141197576656951190504437892363`18.711499320664462}, {
     1.`17.894061024863735, 
      6.57088296233958438616736471969700853795`18.711684756661956}, {
     1.`17.894061024863735, 
      6.57368016696064561501226867293775531175`18.71186959514431}, {
     1.`17.894061024863735, 
      6.57646956904822418246532500706285654579`18.71205383973117}, {
     1.`17.894061024863735, 
      6.57925121201010099506017829290394532112`18.712237494010107}, {
     1.`17.894061024863735, 
      6.58202513889282622943528698523388364255`18.71242056153701}, {
     1.`17.894061024863735, 
      6.58479139238571636567355128154936206339`18.71260304583643}, {
     1.`17.894061024863735, 
      6.58755001482479608893636451431096087237`18.71278495040198}, {
     1.`17.894061024863735, 
      6.59030104819668596941053654938302803867`18.712966278696644}, {
     1.`17.894061024863735, 
      6.5930445341424368131101003121229067785`18.713147034153167}, {
     1.`17.894061024863735, 
      6.59578051396131155898109858326449358711`18.713327220174385}, {
     1.`17.894061024863735, 
      6.5985090286145155810366640606166057336`18.713506840133572}, {
     1.`17.894061024863735, 
      6.60123011872887623789291343910107895882`18.713685897374777}, {
     1.`17.894061024863735, 
      6.60394382460047249607448596834063556575`18.713864395213154}, {
     1.`17.894061024863735, 
      6.60665018619821543780331924717398793958`18.714042336935293}, {
     1.`17.894061024863735, 
      6.60934924316738044866705400393041406807`18.714219725799538}, {
     1.`17.894061024863735, 
      6.61204103483309186557610592583941261932`18.714396565036324}, {
     1.`17.894061024863735, 
      6.61472560020376085075296672655984070599`18.714572857848463}, {
     1.`17.894061024863735, 
      6.61740297797447724314594243875460897156`18.714748607411476}, {
     1.`17.894061024863735, 
      6.6200732065303561246147553580592651913`18.714923816873885}, {
     1.`17.894061024863735, 
      6.6227363239498398244898791556048799812`18.715098489357526}, {
     1.`17.894061024863735, 
      6.62539236800795607265399159538540677837`18.715272627957837}, {
     1.`17.894061024863735, 
      6.62804137617953299812555269712710997973`18.71544623574416}, {
     1.`17.894061024863735, 
      6.63068338564237165723446870511180447617`18.715619315760023}, {
     1.`17.894061024863735, 
      6.63331843328037676286148312948857088099`18.71579187102342}, {
     1.`17.894061024863735, 
      6.6359465556866462738599181660969946676`18.71596390452711}, {
     1.`17.894061024863735, 
      6.63856778916652049168441419511872028276`18.71613541923888}, {
     1.`17.894061024863735, 
      6.64118216974059129941028665861064682026`18.716306418101826}, {
     1.`17.894061024863735, 
      6.64378973314767216673310220858793824925`18.716476904034614}, {
     1.`17.894061024863735, 
      6.64639051484772953318528777609267323706`18.71664687993175}, {
     1.`17.894061024863735, 
      6.64898455002477617068939529629941190034`18.71681634866386}, {
     1.`17.894061024863735, 
      6.65157187358972711568056510864907501293`18.716985313077906}, {
     1.`17.894061024863735, 
      6.65415252018321875036841798607849141803`18.717153775997502}, {
     1.`17.894061024863735, 
      6.65672652417839160226585235509034921919`18.71732174022311}, {
     1.`17.894061024863735, 
      6.65929391968363742088395625463038508513`18.717489208532328}, {
     1.`17.894061024863735, 
      6.66185474054531108047351957114149922211`18.717656183680106}, {
     1.`17.894061024863735, 
      6.66440902035040784787963397271906573158`18.717822668399016}, {
     1.`17.894061024863735, 
      6.66695679242920654496190136955022816583`18.71798866539947}, {
     1.`17.894061024863735, 
      6.66949808985787912561426157207918411116`18.718154177369968}, {
     1.`17.894061024863735, 
      6.67203294546106717819093699616577512977`18.718319206977323}, {
     1.`17.894061024863735, 
      6.67456139181442585510413041618471041334`18.718483756866895}, {
     1.`17.894061024863735, 
      6.67708346124713572250066415163503585156`18.71864782966282}, {
     1.`17.894061024863735, 
      6.67959918584438301424458553478489033804`18.718811427968234}, {
     1.`17.894061024863735, 
      6.6821085974498087659268575337117355396`18.71897455436548}, {
     1.`17.894061024863735, 
      6.68461172766792729628767927374325811943`18.719137211416346}, {
     1.`17.894061024863735, 
      6.68710860786651449526791120880752629895`18.719299401662273}, {
     1.`17.894061024863735, 
      6.68959926917896636989978147620260159136`18.71946112762455}, {
     1.`17.894061024863735, 
      6.69208374250662829139988388756585238333`18.719622391804567}, {
     1.`17.894061024863735, 
      6.69456205852109537913589463128751886112`18.719783196683963}, {
     1.`17.894061024863735, 
      6.69703424766648444959897240237446702619`18.719943544724885}, {
     1.`17.894061024863735, 
      6.69950034016167795112308901872144447128`18.720103438370156}, {
     1.`17.894061024863735, 
      6.7019603660025402978472713704547530318`18.720262880043485}, {
     1.`17.894061024863735, 
      6.70441435496410700931370834062835851254`18.720421872149668}, {
     1.`17.894061024863735, 
      6.70686233660274705513075433058656265539`18.720580417074764}, {
     1.`17.894061024863735, 
      6.70930434025829879730198694917994836405`18.720738517186316}, {
     1.`17.894061024863735, 
      6.71174039505617991612766748636056766328`18.720896174833516}, {
     1.`17.894061024863735, 
      6.71417052990947169902029867942797052486`18.721053392347393}, {
     1.`17.894061024863735, 
      6.71659477352097806513863523862105392178`18.721210172041015}, {
     1.`17.894061024863735, 
      6.71901315438525969243170754857160066389`18.72136651620966}, {
     1.`17.894061024863735, 
      6.72142570079064360749346367797573466063`18.72152242713098}, {
     1.`17.894061024863735, 
      6.72383244082120859255688017031437801326`18.721677907065217}, {
     1.`17.894061024863735, 
      6.72623340235874675800126227725624605517`18.721832958255337}, {
     1.`17.894061024863735, 
      6.72862861308470162290543525276933597321`18.72198758292723}, {
     1.`17.894061024863735, 
      6.73101810048208304045016604314366695801`18.722141783289878}, {
     1.`17.894061024863735, 
      6.73340189183735929935305367796642277804`18.722295561535507}, {
     1.`17.894061024863735, 
      6.7357800142423267270059483498552740416`18.722448919839778}, {
     1.`17.894061024863735, 
      6.73815249459595711457642050837063325419`18.722601860361927}, {
     1.`17.894061024863735, 
      6.74051935960622327902867326507540168627`18.72275438524495}, {
     1.`17.894061024863735, 
      6.74288063579190307181339762486176404266`18.72290649661575}, {
     1.`17.894061024863735, 
      6.74523634948436213886828540578367838272`18.7230581965853}, {
     1.`17.894061024863735, 
      6.74758652682931573155916401235191293756`18.723209487248802}, {
     1.`17.894061024863735, 
      6.74993119378856986327397396832697104403`18.723360370685835}, {
     1.`17.894061024863735, 
      6.75227037614174210155609518139780670579`18.72351084896051}, {
     1.`17.894061024863735, 
      6.75460409948796228092790837791115017735`18.723660924121642}, {
     1.`17.894061024863735, 
      6.75693238924755341690806608948838781124`18.723810598202856}, {
     1.`17.894061024863735, 
      6.75925527066369309716489892778322682187`18.723959873222775}, {
     1.`17.894061024863735, 
      6.76157276880405562127189631805845995432`18.724108751185145}, {
     1.`17.894061024863735, 
      6.7638849085624351561375166954307205376`18.724257234078987}, {
     1.`17.894061024863735, 
      6.76619171466035016986898131090189007624`18.724405323878734}, {
     1.`17.894061024863735, 
      6.76849321164862940259650872396880151774`18.724553022544377}, {
     1.`17.894061024863735, 
      6.77078942390897962862901281658373135529`18.7247003320216}, {
     1.`17.894061024863735, 
      6.77308037565553546023301238515622622376`18.72484725424192}, {
     1.`17.894061024863735, 
      6.7753660909363914393218183372774214117`18.724993791122813}, {
     1.`17.894061024863735, 
      6.77764659363511665941044425120093026843`18.72513994456787}, {
     1.`17.894061024863735, 
      6.77992190747225215633163139702402321165`18.725285716466903}, {
     1.`17.894061024863735, 
      6.78219205600679130241842808218958743664`18.725431108696096}, {
     1.`17.894061024863735, 
      6.78445706263764343513748630235479827655`18.725576123118124}, {
     1.`17.894061024863735, 
      6.78671695060508094750323937930345227125`18.725720761582284}, {
     1.`17.894061024863735, 
      6.78897174299217006401503727232850257277`18.725865025924616}, {
     1.`17.894061024863735, 
      6.79122146272618552233580699535421342701`18.72600891796804}, {
     1.`17.894061024863735, 
      6.79346613258000937747056945263949316285`18.726152439522476}, {
     1.`17.894061024863735, 
      6.79570577517351414180490563348482276058`18.726295592384947}, {
     1.`17.894061024863735, 
      6.79794041297493047102597759365041570617`18.726438378339726}, {
     1.`17.894061024863735, 
      6.80017006830219960267075391228428656949`18.726580799158437}, {
     1.`17.894061024863735, 
      6.8023947633243107508264733832137798245`18.726722856600194}, {
     1.`17.894061024863735, 
      6.80461452006262365734593907246071345627`18.72686455241168}, {
     1.`17.894061024863735, 
      6.80682936039217649683382785799055137626`18.727005888327305}, {
     1.`17.894061024863735, 
      6.80903930604297932960871365786517856298`18.72714686606929}, {
     1.`17.894061024863735, 
      6.81124437860129329384784581974985018131`18.72728748734779}, {
     1.`17.894061024863735, 
      6.81344459951089572517683163969286254204`18.727427753861008}, {
     1.`17.894061024863735, 
      6.81563999007433138907320115464308551419`18.727567667295297}, {
     1.`17.894061024863735, 
      6.8178305714541500086103635026116601025`18.727707229325276}, {
     1.`17.894061024863735, 
      6.82001636467413026727569984684896145339`18.72784644161393}, {
     1.`17.894061024863735, 
      6.82219739062049046385250245009888021761`18.727985305812723}, {
     1.`17.894061024863735, 
      6.82437367004308599365920852941091346219`18.728123823561706}, {
     1.`17.894061024863735, 
      6.82654522355659382778995731473270310773`18.728261996489607}, {
     1.`17.894061024863735, 
      6.82871207164168415939700580124718787026`18.728399826213945}, {
     1.`17.894061024863735, 
      6.83087423464617938349707930271688650964`18.72853731434113}, {
     1.`17.894061024863735, 
      6.83303173278620057426943263965279444587`18.728674462466554}, {
     1.`17.894061024863735, 
      6.8351845861473016213424010161492471227`18.72881127217471}, {
     1.`17.894061024863735, 
      6.83733281468559118413668911758524061474`18.72894774503927}, {
     1.`17.894061024863735, 
      6.83947643822884262094676341019244555423`18.729083882623193}, {
     1.`17.894061024863735, 
      6.84161547647759204709567427978489971833`18.729219686478817}, {
     1.`17.894061024863735, 
      6.84374994900622467419265686126507904828`18.729355158147957}, {
     1.`17.894061024863735, 
      6.84587987526404958025617424591471448457`18.729490299161988}, {
     1.`17.894061024863735, 
      6.84800527457636305823692259478417752147`18.729625111041962}, {
     1.`17.894061024863735, 
      6.85012616614550068828497885955240389636`18.72975959529867}, {
     1.`17.894061024863735, 
      6.85224256905187827695201821276915290346`18.729893753432755}, {
     1.`17.894061024863735, 
      6.85435450225502180440265502132028976297`18.730027586934792}, {
     1.`17.894061024863735, 
      6.85646198459458651862777821979840538437`18.73016109728538}, {
     1.`17.894061024863735, 
      6.85856503479136531360658372569083596945`18.73029428595522}, {
     1.`17.894061024863735, 
      6.86066367144828652635219173433228574773`18.730427154405227}, {
     1.`17.894061024863735, 
      6.86275791305140128579762783717826223259`18.730559704086584}, {
     1.`17.894061024863735, 
      6.86484777797086054453390995285779318196`18.730691936440845}, {
     1.`17.894061024863735, 
      6.86693328446188192249939729889777275263`18.730823852900023}, {
     1.`17.894061024863735, 
      6.86901445066570648983881523405494233678`18.73095545488666}, {
     1.`17.894061024863735, 
      6.87109129461054561430087556162716887117`18.731086743813925}, {
     1.`17.894061024863735, 
      6.8731638342125179967245829336340781208`18.73121772108567}, {
     1.`17.894061024863735, 
      6.87523208727657701637558352030478830387`18.731348388096546}, {
     1.`17.894061024863735, 
      6.87729607149742850613471307638832592141`18.731478746232042}, {
     1.`17.894061024863735, 
      6.87935580446043907581069042752898165939`18.731608796868606}, {
     1.`17.894061024863735, 
      6.88141130364253510014714295270872207316`18.731738541373687}, {
     1.`17.894061024863735, 
      6.88346258641309248642031758925832101862`18.73186798110583}, {
     1.`17.894061024863735, 
      6.88550967003481733487740972450145214935`18.731997117414757}, {
     1.`17.894061024863735, 
      6.88755257166461760364592906302890023495`18.73212595164143}, {
     1.`17.894061024863735, 
      6.88959130835446588815142244647326122108`18.732254485118123}, {
     1.`17.894061024863735, 
      6.89162589705225342351370497433446299725`18.73238271916852}, {
     1.`17.894061024863735, 
      6.89365635460263541685003877169321470916`18.732510655107756}, {
     1.`17.894061024863735, 
      6.8956826977478678148969791163695252782`18.732638294242513}, {
     1.`17.894061024863735, 
      6.89770494312863561087042550649454491672`18.73276563787108}, {
     1.`17.894061024863735, 
      6.89972310728487279301532493183324005083`18.732892687283428}, {
     1.`17.894061024863735, 
      6.90173720665657403585203939741439039447`18.733019443761286}, {
     1.`17.894061024863735, 
      6.90374725758459823370518170313024929383`18.733145908578194}, {
     1.`17.894061024863735, 
      6.90575327631146397470232325944256959108`18.73327208299959}, {
     1.`17.894061024863735, 
      6.9077552789821370520539743640530926228`18.733397968282862}}, 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`x}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{3.901383645479905*^9, 3.901385197919289*^9, 
  3.901391229790217*^9, 3.901413186063431*^9, 3.901464128162229*^9, 
  3.901464223242001*^9},
 CellLabel->"Out[48]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", "f2model", "]"}]], "Input",
 CellChangeTimes->{{3.901464228463517*^9, 3.901464239227803*^9}},
 CellLabel->"In[49]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "-", "5.65567732246692912450156129375410754765`17.894061024863735"}], "+", 
  RowBox[{
  "1.51052186123510035705646578378391441571`17.894061024863735", " ", 
   "x"}]}]], "Output",
 CellChangeTimes->{3.9014642402155027`*^9},
 CellLabel->"Out[49]="]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.901464314992442*^9, 3.901464316333291*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f2meanmodel", " ", "=", " ", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{
    RowBox[{"Log", "[", 
     RowBox[{"f2test", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"-", "200"}], ";;"}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", " ", "+", " ", 
      RowBox[{"b", " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "+", " ", 
      RowBox[{"1.5", " ", "x"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", " ", "b"}], "}"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9014466003109417`*^9, 3.901446646113648*^9}, {
  3.9014642687209578`*^9, 3.9014642918745337`*^9}, {3.9014653361351757`*^9, 
  3.901465348013777*^9}, {3.901465405743362*^9, 3.901465411111766*^9}},
 CellLabel->"In[67]:="],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Nonlinear", {$CellContext`a -> -5.7185481735211185`, $CellContext`b -> 
      0.07012396515116472}, {{$CellContext`x}, {$CellContext`a + 
       1.5 $CellContext`x + $CellContext`b Log[$CellContext`x]}}}, {1}, {{
      Log[602], 4.0120709511138626455911693540162319465`18.03793298307294}, {
      Log[604], 4.01641603591899025420295399955392078055`18.037072346298423}, {
      Log[606], 4.02160989696419027724353563959000797237`18.03616843440605}, {
     
      Log[608], 4.02718728524586011135344710956327056082`18.035272200147457}, {
      Log[610], 4.03127166147032695638791965883262894194`18.03442181337242}, {
     
      Log[612], 4.03724469788981920974464624748081037605`18.033520205654938}, {
      Log[614], 4.04213753002870775509700547889523518414`18.032637210902717}, {
      Log[616], 4.04606088394183010372356033258173598896`18.031785020775654}, {
      Log[618], 4.05211616251025484056075457400354841445`18.030887925707358}, {
      Log[620], 4.05641922356645570360230477814437186928`18.02997208427717}, {
     
      Log[622], 4.06071751352487773118151014317342864163`18.029115397168997}, {
      Log[624], 4.06584397224930779488986583711011811397`18.028237175028952}, {
      Log[626], 4.07088102269069777747120151655931793975`18.027361371632416}, {
      Log[628], 4.0755410178243389619175618434628128266`18.026534977695775}, {
     
      Log[630], 4.08091003577333297773086918101906750906`18.025677028221814}, {
      Log[632], 4.08584094872971656317192519756914148032`18.02477127326362}, {
     
      Log[634], 4.08967532488337256183489517623683309757`18.023941305864003}, {
      Log[636], 4.09457935253665798786041512891414069423`18.023065933843455}, {
      Log[638], 4.09960907696331679034095192299312309332`18.02218725089861}, {
     
      Log[640], 4.10457061173580643017912819863951034802`18.021419833209087}, {
      Log[642], 4.10979203503872184287050417805572968127`18.020537036832355}, {
      Log[644], 4.11393176316961800655988981802021496019`18.019648719067188}, {
      Log[646], 4.11803022441004509770367368887582763415`18.018834556464995}, {
      Log[648], 4.12360754966403092924743018377603590797`18.017979007827062}, {
      Log[650], 4.12769471052429562653528739017905254316`18.01709592680647}, {
     
      Log[652], 4.13234603243856188066093661434784766849`18.01630430639152}, {
     
      Log[654], 4.13757076414042850999805341823902175439`18.01545937267795}, {
     
      Log[656], 4.14163493194091894039632140705244444047`18.01458431675569}, {
     
      Log[658], 4.14616149621238486546578567683081929951`18.01379468489052}, {
     
      Log[660], 4.1512216537198669151013685600933069938`18.012949910773962}, {
     
      Log[662], 4.15551216855448012468402861426380292648`18.012054720236712}, {
      Log[664], 4.15915091778134595059978442430351520905`18.011253429696193}, {
      Log[666], 4.16422739800870308210791500519382055653`18.010432913571467}, {
      Log[668], 4.16963206988479115600260974070327145369`18.009605109946342}, {
      Log[670], 4.17359311240318495019359075980293844311`18.008840696477787}, {
      Log[672], 4.1785785641102773799840999636818558702`18.00798804376519}, {
      Log[674], 4.18314221397969342040810471587501352374`18.00715431769795}, {
     
      Log[676], 4.1867119164741434561781660941376008739`18.006364336145122}, {
     
      Log[678], 4.19190725158033354715788029050812860753`18.005524775822714}, {
      Log[680], 4.19582671555072084660977218420971298938`18.004675085586577}, {
      Log[682], 4.2004019724545524688999089883324396763`18.00390610487992}, {
      Log[684], 4.2052013366986373809649313942251826446`18.00309071254442}, {
      Log[686], 4.20914685324191226892530591163084546567`18.002249718757316}, {
      Log[688], 4.21367889127907426731520064191711409089`18.001481541177466}, {
      Log[690], 4.21823864695770212202632355723032551192`18.00066398797609}, {
     
      Log[692], 4.22271245975680171189214360346682118674`17.99983424771883}, {
     
      Log[694], 4.22619682332141002762399766896534417977`17.99906204861322}, {
     
      Log[696], 4.23122425414443399453745391284646196567`17.99825631267105}, {
     
      Log[698], 4.23583567692088522230112361950881228905`17.997437802444352}, {
      Log[700], 4.23963919194782287030899252103951217119`17.996699225469122}, {
      Log[702], 4.24457535293360320474112416806665675361`17.99586650842086}, {
     
      Log[704], 4.2484454305207326098794508959580124869`17.995042167942813}, {
     
      Log[706], 4.25237824378928086452016193692454655502`17.994314472235068}, {
      Log[708], 4.25725260767266915953851030650087187972`17.99349986377163}, {
     
      Log[710], 4.26160769851960852001073455443571996058`17.992704771261515}, {
      Log[712], 4.26532420085659143553036099102594273428`17.991934290894772}, {
      Log[714], 4.26972895525079324163751308310505135176`17.991138765056267}, {
      Log[716], 4.27397447217818814194535964184660331282`17.990344907840857}, {
      Log[718], 4.27857200267002923217535250230088050021`17.989628760224285}, {
      Log[720], 4.28289277542736165255555705639171778082`17.988834197036354}, {
      Log[722], 4.28673792658259753076613830244145904685`17.988001341383246}, {
      Log[724], 4.29075134960796215057308230378394075636`17.987284604202312}, {
      Log[726], 4.29504402297379587195704132544955093424`17.98649591045043}, {
     
      Log[728], 4.29961859771244611369194114494233186951`17.98570912346577}, {
     
      Log[730], 4.30328784867988524760077596382280718634`17.984971081852102}, {
      Log[732], 4.3078458982123852791996896597174576492`17.98417205306198}, {
      Log[734], 4.31182004221137021497032268037052685152`17.983401816397123}, {
      Log[736], 4.31509577808994739530207123903153832906`17.982665617844003}, {
      Log[738], 4.32006083294988716334405581916458327448`17.981874705893624}, {
      Log[740], 4.32409770464499882842567911158297635105`17.981110684284918}, {
      Log[742], 4.3276835573926643494293210175510214836`17.980367259013956}, {
     
      Log[744], 4.33245746360598263961976284388218566124`17.97961277886075}, {
     
      Log[746], 4.33605674981782052138863417315684530086`17.978827692717843}, {
      Log[748], 4.33998454324561994106982323016077369114`17.97810959712711}, {
     
      Log[750], 4.34442444437864428469388536588422097401`17.977353916612206}, {
      Log[752], 4.34867163691940785411903121787305263077`17.976570104649955}, {
      Log[754], 4.35190568568653885681062977581670260187`17.975852057967955}, {
      Log[756], 4.35622666428868707260496885603849241312`17.9750989501089}, {
      Log[758], 4.36056380302317583100463783551148021452`17.97432122151636}, {
     
      Log[760], 4.36373388962293352039595904584925335559`17.97360468523736}, {
     
      Log[762], 4.36850431419731810191926980573788128558`17.972850415318085}, {
      Log[764], 4.37198634036387789640012485506931003421`17.97207893153851}, {
     
      Log[766], 4.37568454340972274640527539650792918717`17.971388115022545}, {
      Log[768], 4.3802484808066761021843723858369808165`17.970626433088093}, {
     
      Log[770], 4.38405363495529494983924057695037566643`17.969883946200333}, {
      Log[772], 4.3877359083679611927402623651413946928`17.969155492457922}, {
     
      Log[774], 4.39175907147715723783461342091146297662`17.96840648818659}, {
     
      Log[776], 4.39520878154387475623257490973086754881`17.96764653730524}, {
     
      Log[778], 4.39908374000395553238000242374571258457`17.966958827813993}, {
      Log[780], 4.40344079505019091586068890215048068811`17.966220169205688}, {
      Log[782], 4.4073567072310143370495034951550442676`17.965465000327242}, {
     
      Log[784], 4.4110066555143734076351259719659738748`17.96480245504973}, {
      Log[786], 4.41526660803402755492132793953466211993`17.96406609878949}, {
     
      Log[788], 4.41930932235845169867940288106914821638`17.96332069769934}, {
     
      Log[790], 4.42236184116015227890729890098878101351`17.962627585509825}, {
      Log[792], 4.42658185478252454630088165253471719849`17.9618781051211}, {
      Log[794], 4.43054732705866498726592498301955904675`17.96114988750194}, {
     
      Log[796], 4.43391980261494468528539820396003916063`17.960484333474778}, {
      Log[798], 4.43823911017201052764112060895514869877`17.959742939657847}, {
      Log[800], 4.44174034239508016985892986119959498419`17.958994336052882}, {
      Log[802], 4.44531445753139602854649612023974244893`17.95831707756163}, {
     
      Log[804], 4.44920040886248934429464024453706472904`17.957592019932346}, {
      Log[806], 4.45288890165381848545602559454144766283`17.95687821369422}, {
     
      Log[808], 4.45718119175301900389134328447585118197`17.95622532702974}, {
     
      Log[810], 4.46103022665220816599791137018308064749`17.955504031768733}, {
      Log[812], 4.46444392805223119976698393857542316324`17.954749119968348}, {
      Log[814], 4.46767303110166800664616638242080037907`17.95407464848788}, {
     
      Log[816], 4.4716800158995807490605732901916241558`17.953364699808834}, {
     
      Log[818], 4.475631963186067510902146423925816655`17.952643398476393}, {
      Log[820], 4.47884693030531208895081344903681659961`17.951993083856877}, {
      Log[822], 4.48337361621735160609848411263942914838`17.951273817336055}, {
      Log[824], 4.48659670170792734004188586845406883778`17.9505498434733}, {
      Log[826], 4.4895245591591050901462111221490423975`17.949883229759088}, {
     
      Log[828], 4.49404605985885523057527642344505740408`17.9491640861345}, {
      Log[830], 4.49728972508469666777736622147146516719`17.94844670361986}, {
     
      Log[832], 4.50046262487505342107104350403618222564`17.947769574774654}, {
      Log[834], 4.50431721941224726900215704509763413416`17.947069397796305}, {
      Log[836], 4.50815124145884938321962552635961289188`17.946380959166117}, {
      Log[838], 4.51188315797977143735456635840196183099`17.945734991230754}, {
      Log[840], 4.51565143153357717190613262539828032296`17.94503902534345}, {
     
      Log[842], 4.51903664737120920384416051049006275388`17.944297308219067}, {
      Log[844], 4.52201317783019178687425435892407702003`17.94365191582089}, {
     
      Log[846], 4.52569116391838662032321024736884862552`17.9429552272565}, {
      Log[848], 4.5296600238883989219697525019578659832`17.942264068035676}, {
     
      Log[850], 4.53325157798041188235548730936800623554`17.94164168899495}, {
     
      Log[852], 4.53723178646494326824063958674533254383`17.94093721417273}, {
     
      Log[854], 4.54060181534301593445306819526342705317`17.940255607251007}, {
      Log[856], 4.54364369031148770259982359869215097337`17.939607510502498}, {
      Log[858], 4.54772756736924649213506103406609718994`17.93891128904618}, {
     
      Log[860], 4.55097270079131430537109597447160545233`17.93821360062943}, {
     
      Log[862], 4.55404956097522959324198852349085527913`17.93755745521893}, {
     
      Log[864], 4.55797400144679853471153551368922692504`17.936876636933548}, {
      Log[866], 4.56103315216287093343502195401128292529`17.936182047913235}, {
      Log[868], 4.56441156067749520765328581684575097135`17.935545726997173}, {
      Log[870], 4.56836081172011833360203704852710007251`17.934872710137313}, {
      Log[872], 4.57191902901893556449695498911502752863`17.934184285209525}, {
      Log[874], 4.57499596188378292488135113133884422414`17.933569323855437}, {
      Log[876], 4.57871574288816935519339121147859399184`17.93290280258255}, {
     
      Log[878], 4.58267832180958995380893436915348140873`17.93222422519967}, {
     
      Log[880], 4.58540957380902310958774466844806725101`17.931591597922356}, {
      Log[882], 4.58928766037668437124550916686121211668`17.930904837940044}, {
      Log[884], 4.59240478766854870425809667084306824838`17.93021517221704}, {
     
      Log[886], 4.59533124658386000005550674470490002222`17.929595497337118}, {
      Log[888], 4.59920258001647365650590475022554275564`17.928914869815465}, {
      Log[890], 4.60221042609348152556674245704532268216`17.928238629761005}, {
      Log[892], 4.60563338065367085434429822169809701849`17.92761511033143}, {
     
      Log[894], 4.60929640606932479491947503539833865316`17.926956027732412}, {
      Log[896], 4.61251137169226685717155685052282755154`17.92630088521258}, {
     
      Log[898], 4.6159711784176815732512293551112959519`17.92567954220403}, {
      Log[900], 4.61967010132055317063727237792068890623`17.925030186800647}, {
      Log[902], 4.62296853893426937919983913794425345484`17.924358084580692}, {
      Log[904], 4.62606333197867568010783157866703703707`17.923765288540586}, {
      Log[906], 4.62981327561438869471652433646397578235`17.92311104452621}, {
     
      Log[908], 4.63331433470744840526488490057197131257`17.922447321735334}, {
      Log[910], 4.63595871328397370101042044490448435846`17.92183303699172}, {
     
      Log[912], 4.63984297396643334147335199867722218841`17.92115998421085}, {
     
      Log[914], 4.64279470963606986986913037509386006212`17.92049924964492}, {
     
      Log[916], 4.64574870018270691833077104125944891212`17.91990664727546}, {
     
      Log[918], 4.64949485153837085571272271381728683059`17.91924448794894}, {
     
      Log[920], 4.65288402250147686945399660254015855482`17.918601154520527}, {
      Log[922], 4.65578321639801672391519516810512972709`17.91798232666735}, {
     
      Log[924], 4.65914207422815748647800592791160535918`17.917334424857607}, {
      Log[926], 4.66248119822537345646418158387357602827`17.916688791009143}, {
      Log[928], 4.66569547770384412295435411854580900068`17.91609117670197}, {
     
      Log[930], 4.66910074848506883963207390151163146494`17.915451702337347}, {
      Log[932], 4.67210088147228432224756058641634085876`17.91478234988337}, {
     
      Log[934], 4.67524814109942566377333249397306520189`17.91420304806818}, {
     
      Log[936], 4.67856359918901508908720884702353198585`17.91356204874725}, {
     
      Log[938], 4.68236748522791407787699928999386806495`17.912932639327224}, {
      Log[940], 4.6851320511554131523350427241155155153`17.912334078874576}, {
     
      Log[942], 4.68868469745759114967090720410969879764`17.91168443593524}, {
     
      Log[944], 4.69149488352114993726913924429461052672`17.911040172604366}, {
      Log[946], 4.69428018040320013802840510332400949472`17.910464637099317}, {
      Log[948], 4.69823806216184463790711216001934333476`17.909818423961745}, {
      Log[950], 4.70103741130110994847219220940163154657`17.90917821450644}, {
     
      Log[952], 4.70413860993172161398316774537845579276`17.908593587351373}, {
      Log[954], 4.707653060647498009731437047276696304`17.907963456295235}, {
      Log[956], 4.71044174054194547607812185256043381759`17.90732713268184}, {
     
      Log[958], 4.71350132857939144250425013913876702871`17.906741170695625}, {
      Log[960], 4.71697392756833802606459188313876847281`17.906124047819326}, {
      Log[962], 4.72028271693369424138624050147670560054`17.905483855812196}, {
      Log[964], 4.72302896768807643041972083318525718177`17.904914164459747}, {
      Log[966], 4.72625752559885418401796211239633260166`17.904291416075537}, {
      Log[968], 4.72968185593409979804443936682162685371`17.903656400729947}, {
      Log[970], 4.73228566839098455258578644474209107772`17.903078131579903}, {
      Log[972], 4.73593180589360686897708857884467444738`17.90245633700528}, {
     
      Log[974], 4.73864777689456915030686148445924045469`17.901828696442283}, {
      Log[976], 4.7415331989428899071516113905021326066`17.90126256357438}, {
      Log[978], 4.74515847325805066507572862192320262612`17.900637299724274}, {
      Log[980], 4.74786468391205949467162820131259002975`17.900013603206542}, {
      Log[982], 4.7509753191304921777330593351245364062`17.899434977008127}, {
     
      Log[984], 4.75414056647728513219382951178100046837`17.898821635115233}, {
      Log[986], 4.75685014213102866868843035175161358062`17.898202459155456}, {
      Log[988], 4.7599490135976693675226847827321985113`17.897638700063975}, {
     
      Log[990], 4.76354668411111042862721423037460044341`17.89703709922366}, {
     
      Log[992], 4.76660441676353434644786491331527863903`17.89641540275966}, {
     
      Log[994], 4.76906744119801121652919078174547904407`17.895849450263388}, {
      Log[996], 4.77237838280562585001355804573330701464`17.895239860528182}, {
      Log[998], 4.77556735295383608820446788074234797679`17.894627190557436}, {
      Log[1000], 
      4.77796906422512639027009699853664919846`17.894061024863735}}, 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`a, $CellContext`b, \
$CellContext`x}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.901446640275537*^9, 3.9014466484080753`*^9}, {
   3.901464274336636*^9, 3.901464294050426*^9}, 3.901465349212409*^9, 
   3.901465414379305*^9},
 CellLabel->"Out[67]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", "f2meanmodel", "]"}]], "Input",
 CellChangeTimes->{3.901465431178797*^9},
 CellLabel->"In[68]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "5.7185481735211185`"}], "+", 
  RowBox[{"1.5`", " ", "x"}], "+", 
  RowBox[{"0.07012396515116472`", " ", 
   RowBox[{"Log", "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{3.9014654330392847`*^9},
 CellLabel->"Out[68]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ShowLogFitModel", "[", 
    RowBox[{"data_", ",", " ", "model_", ",", " ", "title_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{"data", ",", " ", 
       RowBox[{"PlotStyle", "->", 
        RowBox[{"{", 
         RowBox[{"Red", ",", " ", 
          RowBox[{"PointSize", "[", "0.01", "]"}]}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "->", 
        RowBox[{"{", "\"\<data\>\"", "}"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"model", "[", "x", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "->", 
        RowBox[{"{", 
         RowBox[{"Green", ",", " ", "Thick"}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotLegends", "->", 
        RowBox[{"{", 
         RowBox[{"model", "[", 
          RowBox[{"Log", "[", "N", "]"}], "]"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "->", "All"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLabel", "->", "title"}], ",", "\[IndentingNewLine]", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Log[N]\>\"", ",", " ", "\"\<Log[<\[Omega].\[Omega]>]\>\""}], 
       "}"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.901383696139576*^9, 3.9013837609716597`*^9}, {
  3.9013838041326714`*^9, 3.90138396684216*^9}, {3.90138419839902*^9, 
  3.901384241079095*^9}, {3.9013842854339247`*^9, 3.9013842904294243`*^9}, {
  3.901385749689596*^9, 3.901385750673686*^9}, {3.9014465271500797`*^9, 
  3.901446542693321*^9}},
 CellLabel->"In[65]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ShowFitLogModel", "[", 
    RowBox[{"data_", ",", " ", "model_", ",", " ", "title_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{"data", ",", " ", 
       RowBox[{"PlotStyle", "->", 
        RowBox[{"{", 
         RowBox[{"Red", ",", " ", 
          RowBox[{"PointSize", "[", "0.01", "]"}]}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "->", 
        RowBox[{"{", "\"\<data\>\"", "}"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"model", "[", 
         RowBox[{"Log", "[", "x", "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "->", 
        RowBox[{"{", 
         RowBox[{"Green", ",", " ", "Thick"}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotLegends", "->", 
        RowBox[{"{", 
         RowBox[{"Exp", "[", 
          RowBox[{"model", "[", 
           RowBox[{"Log", "[", "N", "]"}], "]"}], "]"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "->", "All"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLabel", "->", "title"}], ",", "\[IndentingNewLine]", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<N\>\"", ",", " ", "\"\<<\[Omega].\[Omega]>\>\""}], 
       "}"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9014656348005342`*^9, 3.9014657027169333`*^9}},
 CellLabel->"In[71]:="],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.901383974564876*^9},
 CellLabel->"In[47]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowLogFitModel", "[", 
  RowBox[{
   RowBox[{"Log", "[", 
    RowBox[{"f2test", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"-", "200"}], ";;"}], "]"}], "]"}], "]"}], ",", "f2meanmodel", 
   ",", "\"\<<\[Omega].\[Omega]>\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.90138398615485*^9, 3.901384071833701*^9}, {
   3.901384135917357*^9, 3.9013841594803047`*^9}, 3.9013857629606953`*^9, {
   3.9013857985167093`*^9, 3.901385802739616*^9}, {3.9014073725972853`*^9, 
   3.901407373559434*^9}, {3.901446473396372*^9, 3.9014464976191397`*^9}, 
   3.90144666467817*^9, {3.901446869845716*^9, 3.901446872566774*^9}, {
   3.901464330292549*^9, 3.901464357284917*^9}},
 CellLabel->"In[69]:="],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          PointSize[0.01]], 
         PointBox[CompressedData["
1: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
3g==
          "]]}}}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0], 
           Thickness[Large]], 
          LineBox[CompressedData["
1:eJwVz3001XccB3BuUs3Dfg/q+v2+eerqaW5WTrHK2d6o5nTRqKOIjKyWxLIx
FcsqI3ErZUyXpKlNbrI6id3TPFwd4lIeYo1WqJSnVCip9t0fn/M+rz/e530+
NiGRPl9J9PT0POn9n52uC6Rdvwho677Y7GHMIFia0js1W8C0MYc9KdSP+vtL
7KlbfK5a1VI/O1nskUDt+aQ83M2EgcFjxwOyUwJeH/7TcIUpA7sjqwd3qATY
qbJXzGcY7G0JqR7LFdDP3zqjb8ZACM2JZH4VcKHJPOIqYWAvM4m0KhYQ3V1x
b6ecAZu4vyWqTMAWnzHdVGcGJFkVmF4toCYiw89bweDtgivKtEYBu0Z1pX2b
GajDG211HQJW7tqSGbqTwTKvnuC+HgFDtgGfy+MY9N7K1zYNCdCL//BEQSr9
byw09c0rAcZGwyFTVAxKy2zeSAxEtA+l66mLGPxj9aDRy1TE5Ik22UoNg7nz
FbXbzEX4M5cf7q1n4N5Q/LW/TMSt7Koow04Gy82kEemLaH94XnJMPwPJRKx4
7hMRZ33ytjlMMniekDiQ6Cai7LZBz2ljFpcKT8oKPUX4lMY/HSEs1kTl6hdu
EuFnGX3tqJxFYWfhqqEQEbq7fRznzOJxb4m9aYSIkyu0S+57sFir3PopncDL
nIrhoEAW++5KL390UESr3oizNpxFovZGo6NSRI9kQvFdPItA79h1SVkiXvRn
909PY7F5f+vo2XwR12tsF61TsXBQ2Lmp1CKa/jWxf1DEor3s0GhHqYgKzcKq
jRoWG250eI1Uibi9XsWLOhavvm3XtelEnHf1MlR2sQjTdpS8axdhbdGufDTA
4sofrc5TekSUmy5vTnnLosGtRe4xKKKmsb6IN+FgFBPnGjwugq/ztvOazWHO
Guv33hKCQbiHtMo5TCu7YZ1kTLC1YdzhM2cONXXbn2RKCaZJLcpHPTh4xxtJ
B20IqtTenccCOBg0+4WZygmipmec7drJ4ag2P9TIiaBTHLCMiePQ5zdU7eFC
IOtvcXpxhIOQtvTmDg+C1RZ3JRoVh93Bc8d8NhLYuCiiHNUcMjvMkxKC6X5u
+48ZGg4Zg4Z/HQ4nmDFztgt0HIILxje3xxCsOlR7pqmTw4Z36ZYjCQR1P+z5
nRngYD26IPnREYLlu49tyZnkUK6s9LX+mUDttL/U1JhHld7N957UIS0PL6yn
rotq/m0fdVChIi+LusO3Z+IOtesHMw/PMeExbjn1dFomwdDxXH9HUx5Li90f
T2QR8NWpbwMZHuqmpu/bThH4X29zVZvxuOLSYT1FRbCkVub0nFpz+X7dYupz
JrvtnGbyaMgcIanUYYoZZpXUT4P4CtccgoL0xQ9bZ/GY98x3+qVcAisf/6RJ
cx72IUElXdR/z1LtcxF4LGvd7m90mmCjtCvyJ+pV12KLtlGfrw/YxIg8tiZk
f2GRR9Ctv36hLeER9jz/9Vpq/QKlxQ7qqNAL+bHU4wfr2IvUB9w1L1uoo0ed
J5xm80gp1+bonyGQJEcPxVEfl+vWfEz9ja+6u5I6K7dtOIC68sveO4YWPPKY
e1kp1JPnxHoF9X88WQMI
           "]]}, Annotation[#, "Charting`Private`Tag$19298#1"]& ]}}, {}}}, {
    PlotLabel -> FormBox["\"<\[Omega].\[Omega]>\"", TraditionalForm], 
     AxesLabel -> {
       FormBox["\"Log[N]\"", TraditionalForm], 
       FormBox["\"Log[<\[Omega].\[Omega]>]\"", TraditionalForm]}, 
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {6.389684573773975, 3.9695210559410237`}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
       True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{6.389684573773975, 6.907755278982137}, {
      3.9695210559410237`, 4.777969064225126}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"data\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"PointSize", "[", "0.01`", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
           RowBox[{
             RowBox[{"-", "5.7185481735211185`"}], "+", 
             RowBox[{"1.5`", " ", 
               RowBox[{"Log", "[", "N", "]"}]}], "+", 
             RowBox[{"0.07012396515116472`", " ", 
               RowBox[{"Log", "[", 
                 RowBox[{"Log", "[", "N", "]"}], "]"}]}]}]}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[0, 1, 0]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.901391230000867*^9, 3.901407376903241*^9, 
  3.901413186652772*^9, 3.9014465027337112`*^9, 3.901446549201706*^9, 
  3.9014466728402023`*^9, 3.901446888732415*^9, 3.9014643597606897`*^9, 
  3.901465383702166*^9, 3.901465445705844*^9},
 CellLabel->"Out[69]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowFitLogModel", "[", 
  RowBox[{
   RowBox[{"f2test", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "200"}], ";;"}], "]"}], "]"}], ",", "f2meanmodel", ",", 
   "\"\<<\[Omega].\[Omega]>\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.9014657205107393`*^9, 3.901465736866918*^9}},
 CellLabel->"In[72]:="],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          PointSize[0.01]], 
         PointBox[CompressedData["
1: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
v7jBSEuy0PzvCw/aC2lkwdWyQvHuiTj8DoNPvXs=
          "]]}}}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 0], 
           Thickness[Large]], 
          LineBox[CompressedData["
1:eJwVj3s0lAkAxYeINqtEUspjd5tYmlEoo3BJaY1HxpinjyGcmIzpnLVIKQZj
ZpivOuvR4yh6kdqx4XjEnhidzPYgKu2xS6vyWD1VthBr/7jnnt9f93ftY1NY
8foUCiV4If83Y6OfAaUnB80UH+2iCiZ26d/Rm17gqvGdCtp5Jtj94fPvH+Sg
68Y0wb/IhDQ7fnq0LweM0/tdNdVMVD0qeNvdnwPlrQS18DoTllndf54dyoHT
E5FBo5aJD/cjG3ze5CD+071X6SNM/CJNSzhiKoNBdH2Fg3MQ9rp2HgNLhkRj
6+glnUFI3H2bmXtchlYnyfFuVjCWW1Swld0yBA6Wfbo2FIypqBPre1fkgiuh
v8jMCAFtliE/E5YL6bSRxYclobho9bm2qjgXWcF1/PzLoWibUDukPcnFwd+2
m5bb7wHVbMClyzIPXskJktqkPehu8NYTCvJQpTt1IrFlD3RXebHSk3mQiBRL
mYZhiBP8YLa7Pw/OBw9N2IaGwVseVhCzJh8al6Mh9WfDkLR4+bEvvHw4W52z
jZgIwyODkeiBM/kw7icf6bxY+Lv5xOHMoXyYf0LZVpIF7/aPTuXr5BBkHukq
HmBhIEBaqR8jx4fqdvIpLRw6u4rq8bNy8GMuSb8+HI6p9PH0Fc/lME+kDHv2
hqNTblzyhVoAzapeazaVjWdjf+0QxxeAzfSguqWy4af7vXlNdQFerjaYdb7D
xuRM8s2gsQKskszXDFpHYMeLUQtfqgLf2i5zF4kj0BecsSktUQGTS9Rhs44I
NBi3D9KrFCh52lIaa87BYz879vcvFaj4qKuaEnNQ5spZNUpT4rDM3Umk5aDm
Jz8xNVmJOs2N5pCVXMx57JJfrlVitiN7vlTCRWUwxa3mjRIvajsM+R1cjFod
px3YqEKSw9izhxY8iPcy3qVLVdgQ/2WuXcKDL6XMf5FGhTQnfzdTLQ+ctaai
7kkVCM4YbdCGj1alp4nN5kIodAofSiofWo3XYrq0EI4Nr0Yf6Pj4is3ryq4r
BKM2MtuLKkBloKM1d7IQo4x4o2eHBMi4abZFsqUIUYzAVrcBAd697CkPyCgC
/f5a5TYPIVrEu8rONxYhYuibkb2kENrEPr7vTBE28qJrQl4Lsa7F8mqMpxrl
gVx5SEAkrNpdgvzT1ch0l6n+KY8EKyC2ft8NNQoOZSVHzUVi0Dbw2rJpNWwG
ht17uASuvJZJNsyooSzWF4v4BFLb2ug+s2oYZrEuvxUQMBFuui6ZU8OBn+Nu
FkVgW4lV4z19EoFNNlWsOAJlJqM3VUtJlNrTRh5LCbA+yx4arSPh79rV+VxB
wKarrdjWhsTsXc1QqorAeMm/nK22JHpKtXpGRQSOuon/SLAn0eybInQ8RkCT
whq8tZ7Ekv19cZKShf0RuzEZjUR2WF3350oCT+oF1afpJPRXhxKqCwQuyH5O
qnMhcXHlysm1lxb87I1fDW8mkU633YRqAkmRb975biVxQeJgKNcQ2OLkWMf3
IGG3b8Vdq18J6E3H/niAQSL55PpTV64v/Cl9PHVuGwnNd7eZ9xsIxCUsb2ra
TiLeJ4IuaiTg4h6Y0eNFIsXcZM1kE4HZRbmeY94krLInlua2ELjd2zYz70Oi
dt97A8tWAv8B1KIpXg==
           "]]}, Annotation[#, "Charting`Private`Tag$19542#1"]& ]}}, {}}}, {
    PlotLabel -> FormBox["\"<\[Omega].\[Omega]>\"", TraditionalForm], 
     AxesLabel -> {
       FormBox["\"N\"", TraditionalForm], 
       FormBox["\"<\[Omega].\[Omega]>\"", TraditionalForm]}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {593.7083333333347, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
       True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{593.7083333333347, 1000.}, {0, 118.86270222802318`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"data\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    PointSize[0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"PointSize", "[", "0.01`", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
           RowBox[{"0.003284475931635543`", " ", 
             SuperscriptBox["N", "1.5`"], " ", 
             SuperscriptBox[
              RowBox[{"Log", "[", "N", "]"}], "0.07012396515116472`"]}]}, 
          "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[0, 1, 0]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.901465749586397*^9},
 CellLabel->"Out[72]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f2meanmodel", "[", "\"\<ParameterTable\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.901446731427782*^9, 3.901446740108285*^9}, 
   3.901464375522214*^9},
 CellLabel->"In[73]:="],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"1059.0994343207653`\\\"}], \\\"]\\\"}]\\) is too small to represent as a \
normalized machine number; precision may be lost.\"", 2, 73, 13, 
   30039659203334410219, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.901446744097283*^9, 3.901464376586771*^9, 
  3.9014654824871693`*^9, 3.901465810443323*^9},
 CellLabel->"During evaluation of In[73]:="],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
     {"a", 
      RowBox[{"-", "5.7185481735211185`"}], "0.001959838742430816`", 
      RowBox[{"-", "2917.8666844948284`"}], "0.`"},
     {"b", "0.07012396515116472`", "0.0010324200669177177`", 
      "67.92193158402982`", "3.8651847251390446`*^-139"}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.9014467441746817`*^9, 3.901464376618816*^9, 
  3.90146548252861*^9, 3.901465810480579*^9},
 CellLabel->"Out[73]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Exp", "[", 
  RowBox[{"f2meanmodel", "[", 
   RowBox[{"Log", "[", "N", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{3.901467007011697*^9},
 CellLabel->"In[74]:="],

Cell[BoxData[
 RowBox[{"0.003284475931635543`", " ", 
  SuperscriptBox["N", "1.5`"], " ", 
  SuperscriptBox[
   RowBox[{"Log", "[", "N", "]"}], "0.07012396515116472`"]}]], "Output",
 CellChangeTimes->{3.901467009100944*^9},
 CellLabel->"Out[74]="]
}, Open  ]]
},
WindowSize->{2607, 1065},
WindowMargins->{{1938, Automatic}, {410, Automatic}},
PrivateNotebookOptions->{"CloudPublishPath"->"/Published/Enstrophy \
Computations.nb"},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.3 for Mac OS X ARM (64-bit) (July 24, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"b98caf9f-9c54-46f5-b4f2-2166345af516"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1700, 41, 104, "Input",ExpressionUUID->"9c6235a1-0763-4bbf-b1ca-7b853c181ba5",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[2283, 65, 1056, 30, 46, "Input",ExpressionUUID->"813a43b0-e7d9-42bb-82e0-c72966e0a49f"],
Cell[3342, 97, 633, 19, 52, "Output",ExpressionUUID->"fdbed1d2-f452-4cea-9674-6e0492950f32"]
}, Open  ]],
Cell[3990, 119, 1252, 32, 109, "Input",ExpressionUUID->"95418890-3651-4933-8721-11a26eccaceb",
 Evaluatable->False],
Cell[5245, 153, 279, 6, 46, "Input",ExpressionUUID->"913a4ec5-fe3f-4dae-8e07-1895afeec836"],
Cell[CellGroupData[{
Cell[5549, 163, 596, 19, 46, "Input",ExpressionUUID->"7de43371-7cf3-4a2f-a1ed-6897ca61040c"],
Cell[6148, 184, 654, 18, 55, "Output",ExpressionUUID->"fdabea94-5f03-423f-85b6-3bbd9caf2c8b"]
}, Open  ]],
Cell[6817, 205, 393, 10, 46, "Input",ExpressionUUID->"8656daac-f7c0-4ec6-831d-ccd2877d436a"],
Cell[CellGroupData[{
Cell[7235, 219, 1536, 43, 50, "Input",ExpressionUUID->"0931b6f2-407b-46d6-b686-88fe5138d58e"],
Cell[8774, 264, 1606, 48, 52, "Output",ExpressionUUID->"3318fcf4-fa79-44c8-9a6c-e920b1302d1a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10417, 317, 290, 8, 46, "Input",ExpressionUUID->"f32d2059-fb7d-4640-8ba7-3a6755e5d6dc"],
Cell[10710, 327, 1257, 44, 69, "Output",ExpressionUUID->"727b3f44-473d-4400-ab5e-0ccaed8baa90"]
}, Open  ]],
Cell[11982, 374, 277, 6, 46, "Input",ExpressionUUID->"9160b3d7-bc18-4142-bc64-07a461ee8d17"],
Cell[CellGroupData[{
Cell[12284, 384, 818, 26, 67, "Input",ExpressionUUID->"80da3787-2d59-4051-8d8c-40054ed9fc97"],
Cell[13105, 412, 800, 27, 86, "Output",ExpressionUUID->"0008a272-abe8-40f4-9141-37cccadae8f0"]
}, Open  ]],
Cell[13920, 442, 240, 5, 46, "Input",ExpressionUUID->"dd3f2db8-8890-4a17-b2ef-a6a04f217cdc"],
Cell[CellGroupData[{
Cell[14185, 451, 1448, 41, 89, "Input",ExpressionUUID->"a20842f5-597e-45ca-87b3-6504705f1eba"],
Cell[15636, 494, 967, 30, 89, "Output",ExpressionUUID->"7076189d-7606-487b-91f1-d73d204e293d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16640, 529, 640, 16, 46, "Input",ExpressionUUID->"9e807b07-5af7-4daf-917d-faa590257e48"],
Cell[17283, 547, 1973, 66, 99, "Output",ExpressionUUID->"4e608413-a806-44e1-bd35-22066ba90395"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19293, 618, 998, 28, 86, "Input",ExpressionUUID->"89c3a784-a81f-4576-b0e8-177fc6c814e3"],
Cell[20294, 648, 351, 9, 77, "Output",ExpressionUUID->"87779ac0-6be4-4adb-b7e8-5282a29a0149"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20682, 662, 648, 19, 46, "Input",ExpressionUUID->"8a855bcc-ec97-4427-9e26-a0c4d0f77b75"],
Cell[21333, 683, 311, 10, 78, "Output",ExpressionUUID->"de5e81ba-4dd9-4a56-90fb-ac21662d5aa3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21681, 698, 617, 17, 78, "Input",ExpressionUUID->"625917ee-95c2-4f39-a543-6487c2cfc0ec"],
Cell[22301, 717, 301, 9, 77, "Output",ExpressionUUID->"051d5ad2-fbfd-49b4-95ba-819fa5ee8b05"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22639, 731, 407, 11, 78, "Input",ExpressionUUID->"833bd1dc-920b-45bb-a2e2-49baee00c730"],
Cell[23049, 744, 338, 9, 79, "Output",ExpressionUUID->"300d86fe-951c-477c-b8da-ca071ec66cb6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23424, 758, 448, 12, 78, "Input",ExpressionUUID->"12a2c942-0a51-41b7-8ea8-a43cb6222e19"],
Cell[23875, 772, 253, 5, 75, "Output",ExpressionUUID->"8c7746b2-9525-4093-9323-16d679554efc"]
}, Open  ]],
Cell[24143, 780, 278, 5, 46, "Input",ExpressionUUID->"9b4c8ba1-8bf4-4d2c-9a22-f778c826e814"],
Cell[24424, 787, 1520, 41, 202, "Input",ExpressionUUID->"6c0ded07-fab6-4412-9e9e-2c82364e9085"],
Cell[25947, 830, 1294, 18, 46, "Input",ExpressionUUID->"de886610-d26d-40f7-a94a-00541c2d0711"],
Cell[27244, 850, 1923, 48, 46, "Input",ExpressionUUID->"6f588375-a9da-40ad-9a3d-f486cca9a7cd"],
Cell[29170, 900, 265, 4, 46, "Input",ExpressionUUID->"42cda51d-9a46-43b4-a217-44d65a099d17"],
Cell[29438, 906, 1549, 42, 109, "Input",ExpressionUUID->"ea28eee2-7b0e-42b5-8a25-d968d936300b"],
Cell[30990, 950, 373, 10, 46, "Input",ExpressionUUID->"203d2341-9533-4265-a883-89e512e8de23"],
Cell[31366, 962, 218, 4, 46, "Input",ExpressionUUID->"af85ad2a-e095-4fa6-a1d0-edc271898cdc"],
Cell[CellGroupData[{
Cell[31609, 970, 405, 7, 46, "Input",ExpressionUUID->"5979f8a4-2036-492c-94fc-1f8b89a27de7"],
Cell[32017, 979, 178, 3, 52, "Output",ExpressionUUID->"fbb810df-6732-4cd8-a6e4-96321f328af6"]
}, Open  ]],
Cell[32210, 985, 356, 8, 46, "Input",ExpressionUUID->"98f6151b-63e1-4cb2-a2d2-b79b9ae79b73"],
Cell[32569, 995, 336, 9, 46, "Input",ExpressionUUID->"8fb7ff0f-2983-4405-a796-ee9c18119fb8"],
Cell[32908, 1006, 141, 3, 46, "Input",ExpressionUUID->"77554929-25a9-4605-b47b-a2593d3bef41"],
Cell[33052, 1011, 449, 12, 46, "Input",ExpressionUUID->"9175d1a0-39c5-4c08-bce9-2b8cfc799fb2"],
Cell[CellGroupData[{
Cell[33526, 1027, 370, 10, 46, "Input",ExpressionUUID->"1d88dfa8-47f9-4acb-9173-2b0634dab016"],
Cell[33899, 1039, 267, 7, 55, "Output",ExpressionUUID->"3a27d755-544f-45bb-b685-392d8e2a0329"]
}, Open  ]],
Cell[34181, 1049, 675, 18, 46, "Input",ExpressionUUID->"c3a70caa-ffab-4555-bedc-4a41c2ff1589"],
Cell[CellGroupData[{
Cell[34881, 1071, 200, 5, 46, "Input",ExpressionUUID->"da37de12-3c7e-439c-b019-c158fc0109db"],
Cell[35084, 1078, 296, 7, 52, "Output",ExpressionUUID->"f1c84b8c-97f6-4a36-b7c4-d70017fa180a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35417, 1090, 160, 3, 46, "Input",ExpressionUUID->"47261418-886b-4c83-816d-6f68e0323ea5"],
Cell[35580, 1095, 143, 4, 52, "Output",ExpressionUUID->"d72e3d63-1f96-4d17-b1cb-99783281bcf0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35760, 1104, 476, 9, 46, "Input",ExpressionUUID->"1f209ccc-7147-43fb-975a-fedf979c79a2"],
Cell[36239, 1115, 10268, 204, 381, "Output",ExpressionUUID->"4975482b-c5c0-4010-bc2e-67d8f76ffe2b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46544, 1324, 149, 4, 46, "Input",ExpressionUUID->"0ef46b64-7c3c-4f95-aacd-937cafcf2a7c"],
Cell[46696, 1330, 206, 6, 52, "Output",ExpressionUUID->"26a6fa86-e796-42e4-add0-2d703ac17b7a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46939, 1341, 453, 11, 46, "Input",ExpressionUUID->"e645103b-62f6-4763-bd15-5a96165e78fc"],
Cell[47395, 1354, 3798, 97, 382, "Output",ExpressionUUID->"01cd09a1-4ffc-4e32-98ad-10a8a932b48d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51230, 1456, 498, 13, 46, "Input",ExpressionUUID->"7a621f53-0f34-4644-b1b5-92220af83412"],
Cell[51731, 1471, 42103, 772, 65, "Output",ExpressionUUID->"89bef8e1-e6b4-4ced-8e31-61456ebd36b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93871, 2248, 155, 3, 46, "Input",ExpressionUUID->"c8a27fea-4088-4752-bea7-fb1da9304a94"],
Cell[94029, 2253, 285, 8, 52, "Output",ExpressionUUID->"5596eb58-dd56-4d89-93a3-006bc9fe504a"]
}, Open  ]],
Cell[94329, 2264, 92, 1, 46, "Input",ExpressionUUID->"c3441493-7f1c-44f4-9615-98956dea6f7d"],
Cell[CellGroupData[{
Cell[94446, 2269, 767, 19, 46, "Input",ExpressionUUID->"27358c26-8766-4aab-952f-040f8190ccb7"],
Cell[95216, 2290, 17235, 302, 65, "Output",ExpressionUUID->"ef317358-e917-4e7c-9593-473466ce8fc4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112488, 2597, 135, 3, 46, "Input",ExpressionUUID->"d6d875ae-7612-45df-b25a-36a5e64ba1d3"],
Cell[112626, 2602, 263, 7, 52, "Output",ExpressionUUID->"68842a57-aa54-4c0e-b040-889a4e515dac"]
}, Open  ]],
Cell[112904, 2612, 1996, 50, 264, "Input",ExpressionUUID->"5e3117a6-cac2-40cb-b8af-54da6df57fec"],
Cell[114903, 2664, 1844, 48, 70, "Input",ExpressionUUID->"b6dbbc72-b206-49ba-8581-79ee92be3c94"],
Cell[116750, 2714, 92, 2, 70, "Input",ExpressionUUID->"566b6cfa-0a31-4ca8-b6b3-fe441b902e25"],
Cell[CellGroupData[{
Cell[116867, 2720, 719, 15, 70, "Input",ExpressionUUID->"0554a224-d67b-4250-9e45-27011699cc7b"],
Cell[117589, 2737, 18209, 380, 70, "Output",ExpressionUUID->"a24ea6c5-b9fc-4e1a-bb8b-f31471d612a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135835, 3122, 338, 9, 70, "Input",ExpressionUUID->"536a4266-f64c-431b-8fa5-25a8ed1bfbcc"],
Cell[136176, 3133, 16446, 349, 70, "Output",ExpressionUUID->"942ba34c-d91e-41ac-9980-d467d45682a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[152659, 3487, 201, 4, 70, "Input",ExpressionUUID->"83aae26d-7d92-43f5-9317-9b076865a102"],
Cell[152863, 3493, 498, 10, 70, "Message",ExpressionUUID->"106650e0-8de5-4aca-8a6d-e20f6c7d2c3a"],
Cell[153364, 3505, 1006, 23, 70, "Output",ExpressionUUID->"8c144e81-e14e-4991-8916-f69138d251af"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154407, 3533, 191, 5, 70, "Input",ExpressionUUID->"0e4d4a98-1778-4287-993f-23135d93c8f3"],
Cell[154601, 3540, 247, 6, 70, "Output",ExpressionUUID->"e86574fc-5763-4984-b03a-8a20db37e236"]
}, Open  ]]
}
]
*)

